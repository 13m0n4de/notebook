{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"index.html","title":"Welcome to the Wired World","text":""},{"location":"changelog.html","title":"\u65f6\u95f4\u7ebf","text":""},{"location":"changelog.html#2024","title":"2024","text":"2024-02-03\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 08.Multi-level Feedback</p> 2024-01-27\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 07.CPU Scheduling</p> 2024-01-27\u00b6 <p> \u6dfb\u52a0 Katex \u652f\u6301</p> 2024-01-24\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 06.Direct Execution</p> 2024-01-23\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 06.Direct Execution</p> 2024-01-23\u00b6 <p> CS &gt; Programming Language &amp; ISA &gt; C &gt; Including C Files Over HTTPS</p> 2024-01-17\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 05.Process API</p> 2024-01-16\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 04.Processes</p> 2024-01-12\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 02.Introduction \u6dfb\u52a0\u201c\u6301\u4e45\u6027\u201d\u548c\u201c\u7b80\u5355\u5386\u53f2\u201d\u5c0f\u8282</p> 2024-01-12\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 02.Introduction</p> 2024-01-12\u00b6 <p> \u4f7f\u7528 Vercel \u90e8\u7f72</p> 2024-01-12\u00b6 <p> \u7b14\u8bb0\u672c\u4e0a\u7ebf\uff0cWelcome to the Wired World!</p>"},{"location":"todo.html","title":"\u5f85\u529e\u4e8b\u9879","text":"<p>\u5f85\u529e\u4e0d\u4ee3\u8868\u6b63\u5728\u529e\u6216\u4e00\u5b9a\u4f1a\u529e\uff0c\u552f\u4e00\u786e\u8ba4\u7684\u662f\u5b83\u4eec\u90fd\u672a\u5b8c\u6210\u3002</p>"},{"location":"todo.html#_2","title":"\u7b14\u8bb0","text":"<ul> <li> OSTEP \u5b66\u4e60\u7b14\u8bb0</li> <li> rCore \u5b66\u4e60\u7b14\u8bb0\uff0c\u4ee5\u53ca\u81ea\u5df1\u5b9e\u73b0\u65f6\u7684\u4e00\u4e9b\u6539\u8fdb\u60f3\u6cd5</li> <li> MIT 6.1810 \u5b66\u4e60\u7b14\u8bb0\uff0cxv6 \u6e90\u7801\u5206\u6790</li> <li> \u4e00\u4e9b\u6e38\u620f\u76f8\u5173\u7684 AI \u5de5\u4f5c\u6d41</li> <li> \u6709\u5173\u6e38\u620f\u8bbe\u8ba1\u7684\u8ba8\u8bba\u4f1a\u8bb0\u5f55</li> <li> \u7f16\u8bd1\u5668\u524d\u7aef</li> <li> Lisp \u89e3\u91ca\u5668\u7684 Rust \u5b9e\u73b0</li> <li> \u7f16\u7a0b\u8bed\u8a00<ul> <li> \u73b0\u4ee3 C \u8bed\u8a00\u7f16\u7a0b</li> <li> Python \u4e0d\u5e38\u89c1\u7279\u6027</li> <li> Rust -&gt; Zig \u901f\u901a</li> <li> \u4e00\u4e9b\u5947\u602a\u7684\u201c\u9ed1\u9b54\u6cd5\u201d<ul> <li> \u901a\u8fc7 HTTPS \u5305\u542b C \u5934\u6587\u4ef6</li> <li> ...</li> </ul> </li> </ul> </li> <li> \u4ee5\u5f80\u7684 CTF \u6bd4\u8d5b\u9898\u89e3</li> <li> CTF \u51fa\u9898\u7ecf\u9a8c<ul> <li> \u4f7f\u7528 GitHub \u4ed3\u5e93\u534f\u4f5c\u51fa\u9898\u3001\u6784\u5efa\u955c\u50cf</li> </ul> </li> <li> \u8ba1\u7b97\u673a\u81ea\u6551\u6307\u5357\uff08\u53d7\u4eba\u59d4\u6258\uff0c\u5199\u51e0\u7bc7\u8ba1\u7b97\u673a\u5165\u95e8\u6307\u5357\uff09<ul> <li> \u5982\u4f55\u63d0\u95ee</li> <li> \u786c\u4ef6\u9009\u8d2d</li> <li> \u7535\u8111\u65e5\u5e38\u4f7f\u7528\u4e60\u60ef<ul> <li> \u8f6f\u4ef6\u9009\u62e9</li> <li> \u5b89\u5168\u95ee\u9898</li> <li> \u9690\u79c1\u4fdd\u62a4</li> <li> ...</li> </ul> </li> <li> \u4fdd\u6301\u7f51\u7edc\u7545\u901a</li> <li> \u5916\u8bed</li> <li> \u4fe1\u606f\u6e90<ul> <li> \u641c\u7d22\u5f15\u64ce</li> <li> \u8bba\u575b\uff0c\u535a\u5ba2</li> <li> RSS</li> <li> \u4e66\u7c4d</li> <li> \u5982\u4f55\u5224\u65ad\u4fe1\u606f\u6e90\u8d28\u91cf</li> </ul> </li> <li> \u5982\u4f55\u9605\u8bfb\u6587\u6863</li> <li> AI</li> <li> \u7f16\u7a0b\u8bed\u8a00\u9009\u62e9</li> <li> \u5de5\u5177\u9009\u62e9</li> <li> \u5404\u5b66\u79d1\u524d\u7f6e\u77e5\u8bc6</li> <li> ...</li> </ul> </li> </ul>"},{"location":"todo.html#_3","title":"\u7f51\u7ad9\u5efa\u8bbe","text":"<ul> <li> \u4e3b\u9875</li> <li> \u4eae\u8272\u6a21\u5f0f\u4e0b\u66f4\u597d\u7684\u4ee3\u7801\u9ad8\u4eae\u914d\u8272\u65b9\u6848</li> </ul>"},{"location":"cs/index.html","title":"Computer Science","text":""},{"location":"cs/index.html#table-of-contents","title":"Table of Contents","text":"Programming Language &amp; ISA          <ul> <li> C  511  129  3 mins              1706003495 </li> <li> Rust  1  0 mins              1705020272 </li> <li> Python  1  0 mins              1705012002 </li> <li> Racket  1  0 mins              1705012002 </li> <li> RISC-V ISA  2  0 mins              1705012002 </li> </ul> Operating System          <ul> <li> OSTEP  10962  1062  50 mins              1706896084 </li> <li> MIT 6.1810  0  0 mins              0 </li> <li> rCore  0  0 mins              0 </li> </ul> Compiler          <ul> </ul>"},{"location":"cs/compiler/index.html","title":"Compiler","text":""},{"location":"cs/os/index.html","title":"Operating System","text":""},{"location":"cs/os/index.html#table-of-contents","title":"Table of Contents","text":"<ul> <li>OSTEP \u5b66\u4e60\u7b14\u8bb0</li> <li>MIT 6.1810: Operating System Engineering \u5b66\u4e60\u7b14\u8bb0</li> <li>rCore-Tutorial-Book-v3 \u5b66\u4e60\u7b14\u8bb0</li> </ul>"},{"location":"cs/os/mit6.1810.html","title":"MIT 6.1810: Operating System Engineering \u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"cs/os/rcore.html","title":"rCore-Tutorial-Book-v3 \u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"cs/os/ostep/index.html","title":"OSTEP \u5b66\u4e60\u7b14\u8bb0","text":"<p>\u8d44\u6e90</p> <ul> <li>OSTEP</li> <li>OSTEP \u4e2d\u6587\u7ffb\u8bd1</li> <li>OSTEP \u4e66\u4e2d\u4ee3\u7801</li> <li>OSTEP \u4f5c\u4e1a\u6240\u9700\u4ee3\u7801</li> </ul>"},{"location":"cs/os/ostep/index.html#table-of-contents","title":"Table of Contents","text":""},{"location":"cs/os/ostep/index.html#virtualization","title":"Virtualization","text":"<ul> <li>02.Introduction</li> <li>04.Processes</li> <li>05.Process API</li> <li>06.Direct Execution</li> <li>07.CPU Scheduling</li> <li>08.Multi-level Feedback</li> </ul>"},{"location":"cs/os/ostep/02introduction.html","title":"\u7b2c 2 \u7ae0 \u64cd\u4f5c\u7cfb\u7edf\u4ecb\u7ecd","text":"<p>\u8fd9\u7ae0\u5f15\u5165\u4e86\u8bfe\u7a0b\u7684\u4e09\u4e2a\u4e3b\u9898\uff0c\u4e5f\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e09\u4e2a\u91cd\u8981\u529f\u80fd\uff1a</p> <ol> <li>\u865a\u62df\u5316</li> <li>\u5e76\u53d1</li> <li>\u6301\u4e45\u6027</li> </ol> <p>\u4f5c\u8005\u4ecb\u7ecd\u7684\u65f6\u5019\u7528\u4e86\u4e00\u4e9b\u4ee3\u7801\u793a\u4f8b\uff0c\u5176\u4e2d\u8bb8\u591a\u51fd\u6570\u90fd\u88ab\u523b\u610f\u5305\u88c5\u4e86\u4e00\u5c42\uff0c\u4e0d\u77e5\u9053\u662f\u56e0\u4e3a\u4ec0\u4e48\uff0c\u5f88\u591a\u5305\u88c5\u611f\u89c9\u90fd\u4e0d\u592a\u5fc5\u8981\uff0c\u4e00\u4e9b\u4ee3\u7801\u4e5f\u6ca1\u90a3\u4e48\u89c4\u8303\uff0c\u4f5c\u4e3a\u793a\u4f8b\u5012\u662f\u65e0\u4f24\u5927\u96c5\u3002</p> <p>\u4e00\u5f00\u59cb\u6211\u4e0d\u77e5\u9053\u6709\u9644\u5f55\u4ee3\u7801\uff0c\u5168\u90fd\u91cd\u65b0\u6539\u4e86\u4e00\u904d\u3002</p> <p>\u9644\u5f55\u4ee3\u7801\uff1agithub.com/remzi-arpacidusseau/ostep-code/</p>"},{"location":"cs/os/ostep/02introduction.html#21-cpu","title":"2.1 \u865a\u62df\u5316 CPU","text":"cpu.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) {\n  if (argc != 2) {\n    fprintf(stderr, \"usage: cpu &lt;string&gt;\\n\");\n    exit(1);\n  }\n  char *str = argv[1];\n  for (int i = 0; i &lt; 5; i++) {\n    sleep(1);\n    printf(\"%s\\n\", str);\n  }\n}\n</code></pre> <pre><code>$ ./cpu A &amp; ; ./cpu B &amp; ; ./cpu C &amp; ; ./cpu D &amp;\n</code></pre> <p>\u5c31\u80fd\u770b\u5230\u7a0b\u5e8f\u5728\u201c\u540c\u65f6\u8fd0\u884c\u201d\u7684\u5047\u8c61\u3002</p>"},{"location":"cs/os/ostep/02introduction.html#22","title":"2.2 \u865a\u62df\u5316\u5185\u5b58","text":"mem.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) {\n  int *p = malloc(sizeof(int)); // a1\n  assert(p != NULL);\n  printf(\"(%d) memory address of p: %p\\n\", getpid(), p); // a2\n  *p = 0;                                                // a3\n  for (int i = 0; i &lt; 5; i++) {\n    sleep(1);\n    *p = *p + 1;\n    printf(\"(%d) p: %d\\n\", getpid(), *p); // a4\n  }\n  free(p);\n  return 0;\n}\n</code></pre> <p>\u5982\u679c\u8981\u5f97\u5230\u548c\u4e66\u4e2d\u4e00\u6837\u7684\u6548\u679c\uff0c\u8fd8\u9700\u8981\u5173\u95ed ASLR \u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\uff0c\u4e0d\u7136\u5c31\u7b97\u662f\u865a\u62df\u5185\u5b58\uff0c\u6bcf\u6b21\u5206\u914d\u7684\u5730\u5740\u4e5f\u662f\u4e0d\u56fa\u5b9a\u7684\u3002</p> <pre><code>$ echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre> <p>\u5982\u679c\u7f16\u8bd1\u65f6\u5173\u6389 PIE \uff0c\u5f97\u5230\u7684\u5730\u5740\u4f1a\u66f4\u201c\u597d\u770b\u201d\u4e9b\uff0c\u66f4\u63a5\u8fd1\u4e66\u4e2d\u5185\u5bb9\u3002</p> <pre><code>$ gcc mem.c -o mem -no-pie\n</code></pre> <pre><code>$ ./mem &amp;; ./mem &amp; # (1)!\n(63585) memory address of p: 0x4052a0\n(63586) memory address of p: 0x4052a0\n(63585) p: 1\n(63586) p: 1\n(63585) p: 2\n(63586) p: 2\n(63586) p: 3\n(63585) p: 3\n(63586) p: 4\n(63585) p: 4\n(63586) p: 5\n(63585) p: 5\n</code></pre> <ol> <li><code>&amp;</code> \u7b26\u53f7\u7528\u4e8e\u5728 Unix-like \u7cfb\u7edf\u4e2d\u540e\u53f0\u8fd0\u884c\u8fdb\u7a0b\uff0c\u5b83\u4f1a\u542f\u52a8\u547d\u4ee4\u7136\u540e\u7acb\u5373\u8fd4\u56de\u5230\u547d\u4ee4\u884c\u63d0\u793a\u7b26\uff0c\u800c\u4e0d\u662f\u6302\u8d77\u76f4\u5230\u547d\u4ee4\u5b8c\u6210\u3002\u4e0d\u540c\u7684 shell \u53ef\u80fd\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c\u4f46\u884c\u4e3a\u57fa\u672c\u4e00\u81f4\u3002\u6700\u7ec8\u7684\u6548\u679c\u5c31\u662f\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a <code>mem</code> \u7a0b\u5e8f\u3002</li> </ol> <p>\u5b9e\u9a8c\u5b8c\u5c3d\u5feb\u628a ASLR \u6539\u56de\u53bb\uff0c\u4ee5\u514d\u5bf9\u7cfb\u7edf\u5b89\u5168\u9020\u6210\u5f71\u54cd\uff0c\u73b0\u4ee3 Linux \u7cfb\u7edf\u4e2d <code>/proc/sys/kernel/randomize_va_space</code> \u5185\u5bb9\u4e00\u822c\u90fd\u662f <code>2</code> \uff0c\u610f\u4e3a\u66f4\u5f3a\u7684\u968f\u673a\u5316\u3002</p> <pre><code>$ echo 2 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre> <p>\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u5c06\u8d44\u6e90\u865a\u62df\u5316</p> <p>\u6211\u4eec\u5c06\u5728\u672c\u4e66\u4e2d\u56de\u7b54\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u5c06\u8d44\u6e90\u865a\u62df\u5316\uff1f\u8fd9\u662f\u5173\u952e\u95ee\u9898\u3002 \u4e3a\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u8fd9\u6837\u505a\uff1f\u8fd9\u4e0d\u662f\u4e3b\u8981\u95ee\u9898\uff0c\u56e0\u4e3a\u7b54\u6848\u5e94\u8be5\u5f88\u660e\u663e\uff1a\u5b83\u8ba9\u7cfb\u7edf\u66f4\u6613\u4e8e\u4f7f\u7528\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5173\u6ce8\u5982\u4f55\u865a\u62df\u5316\uff1a</p> <ol> <li>\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u54ea\u4e9b\u673a\u5236\u548c\u7b56\u7565\u6765\u5b9e\u73b0\u865a\u62df\u5316\uff1f</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u6709\u6548\u5730\u5b9e\u73b0\u865a\u62df\u5316\uff1f</li> <li>\u9700\u8981\u54ea\u4e9b\u786c\u4ef6\u652f\u6301\uff1f</li> </ol>"},{"location":"cs/os/ostep/02introduction.html#23","title":"2.3 \u5e76\u53d1","text":"threads.c<pre><code>#include &lt;pthread.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvolatile int counter = 0;\nint loops;\n\nvoid *worker(void *arg) {\n  int i;\n  for (i = 0; i &lt; loops; i++) {\n    counter++;\n  }\n  return NULL;\n}\n\nint main(int argc, char *argv[]) {\n  if (argc != 2) {\n    fprintf(stderr, \"usage: threads &lt;value&gt;\\n\");\n    exit(1);\n  }\n  loops = atoi(argv[1]);\n  pthread_t p1, p2;\n  printf(\"Initial value : %d\\n\", counter);\n\n  pthread_create(&amp;p1, NULL, worker, NULL);\n  pthread_create(&amp;p2, NULL, worker, NULL);\n  pthread_join(p1, NULL);\n  pthread_join(p2, NULL);\n  printf(\"Final value : %d\\n\", counter);\n  return 0;\n}\n</code></pre> <pre><code>$ ./threads 100000\nInitial value : 0\nFinal value : 140997\n$ ./threads 100000\nInitial value : 0\nFinal value : 119700\n$ ./threads 100000\nInitial value : 0\nFinal value : 129215\n</code></pre> <p>\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u6784\u5efa\u6b63\u786e\u7684\u5e76\u53d1\u7a0b\u5e8f</p> <p>\u5982\u679c\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u4e2d\u6709\u5f88\u591a\u5e76\u53d1\u6267\u884c\u7684\u7ebf\u7a0b\uff0c\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u6b63\u786e\u5de5\u4f5c\u7684\u7a0b\u5e8f\uff1f</p> <ol> <li>\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u4ec0\u4e48\u539f\u8bed\uff1f</li> <li>\u786c\u4ef6\u5e94\u8be5\u63d0\u4f9b\u54ea\u4e9b\u673a\u5236\uff1f</li> <li>\u6211\u4eec\u5982\u4f55\u5229\u7528\u5b83\u4eec\u6765\u89e3\u51b3\u5e76\u53d1\u95ee\u9898\uff1f</li> </ol>"},{"location":"cs/os/ostep/02introduction.html#24","title":"2.4 \u6301\u4e45\u6027","text":"<p>\u5176\u5b9e\u5c31\u662f\u6587\u4ef6\u7cfb\u7edf\u3002</p> io.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) {\n  int fd = open(\"/tmp/file\", O_WRONLY | O_CREAT | O_TRUNC, S_IRWXU);\n  assert(fd &gt; -1);\n  int rc = write(fd, \"hello world\\n\", 13);\n  assert(rc == 13);\n  close(fd);\n  return 0;\n}\n</code></pre> <p>\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u6301\u4e45\u5730\u5b58\u50a8\u6570\u636e</p> <p>\u6587\u4ef6\u7cfb\u7edf\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u8d1f\u8d23\u7ba1\u7406\u6301\u4e45\u7684\u6570\u636e\u3002</p> <ol> <li>\u6301\u4e45\u6027\u9700\u8981\u54ea\u4e9b\u6280\u672f\u624d\u80fd\u6b63\u786e\u5730\u5b9e\u73b0\uff1f</li> <li>\u9700\u8981\u54ea\u4e9b\u673a\u5236\u548c\u7b56\u7565\u624d\u80fd\u9ad8\u6027\u80fd\u5730\u5b9e\u73b0\uff1f</li> <li>\u9762\u5bf9\u786c\u4ef6\u548c\u8f6f\u4ef6\u6545\u969c\uff0c\u53ef\u9760\u6027\u5982\u4f55\u5b9e\u73b0\uff1f</li> </ol>"},{"location":"cs/os/ostep/02introduction.html#26","title":"2.6 \u7b80\u5355\u5386\u53f2","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u5386\u53f2\uff1a</p> <ul> <li>\u51fd\u6570\u5e93</li> <li>\u6279\u5904\u7406\u7cfb\u7edf</li> <li>\u7279\u6743\u7ea7\u548c\u7cfb\u7edf\u8c03\u7528</li> <li>\u591a\u9053\u7a0b\u5e8f</li> <li>\u5206\u65f6\u591a\u4efb\u52a1</li> <li>\u5185\u5b58\u4fdd\u62a4</li> <li>\u5e76\u53d1</li> <li>...</li> </ul>"},{"location":"cs/os/ostep/04processes.html","title":"\u7b2c 4 \u7ae0 \u62bd\u8c61\uff1a\u8fdb\u7a0b","text":"<p>\u8fd9\u7ae0\u4ecb\u7ecd\u4e86\u8fdb\u7a0b\u7684\u6982\u5ff5\uff0c\u4e3a\u4e86\u865a\u62df\u5316 CPU \u505a\u94fa\u57ab\u3002</p> <p>\u8fdb\u7a0b\u662f\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u65e2\u7136\u6b63\u5728\u8fd0\u884c\uff0c\u90a3\u5c31\u80af\u5b9a\u6709\u72b6\u6001\uff0c\u5305\u62ec\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\u503c\u4ee5\u53ca\u7528\u5230\u7684\u5185\u5b58\u503c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u5206\u914d\u4e00\u4e9b\u5185\u5b58\u5c06\u5b83\u4eec\u9700\u8981\u4fdd\u5b58\u4e0b\u6765\u3002</p> <p>\u4fdd\u5b58\u662f\u4e3a\u4e86\u5207\u6362\uff0c\u5207\u6362\u662f\u56e0\u4e3a\u9700\u8981\u8c03\u5ea6\uff0c\u8c03\u5ea6\u662f\u4e3a\u4e86\u6700\u5927\u5316\u5229\u7528\u7cfb\u7edf\u8d44\u6e90\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u4efb\u610f\u5207\u6362\u7684\u201c\u65e0\u9650\u201d\u591a CPU \u7684\u5047\u8c61\uff0c\u6211\u4eec\u9700\u8981 \u865a\u62df\u5316 CPU \u548c \u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u8fd9\u662f\u540e\u9762\u7ae0\u8282\u7684\u5185\u5bb9\u3002</p> <p>\u672c\u7ae0\u672b\u5c3e\u4f5c\u4e1a\u6846\u67b6\u6a21\u62df\u7684\u662f\u4e00\u4e2a\u652f\u6301\u7c7b\u4f3c\u201c\u591a\u9053\u7a0b\u5e8f\u201d\u7684\u534f\u4f5c\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>\u6458\u4e00\u4e0b rCore \u591a\u9053\u7a0b\u5e8f\u4e0e\u534f\u4f5c\u5f0f\u8c03\u5ea6 \u7684\u5185\u5bb9\uff1a</p> <p>\u591a\u9053\u7a0b\u5e8f\u7684\u601d\u60f3\u5728\u4e8e\uff1a\u5185\u6838\u540c\u65f6\u7ba1\u7406\u591a\u4e2a\u5e94\u7528\u3002 \u5982\u679c\u5916\u8bbe\u5904\u7406 I/O \u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5148\u8fdb\u884c\u4efb\u52a1\u5207\u6362\u53bb\u6267\u884c\u5176\u4ed6\u5e94\u7528\uff1b\u5728\u67d0\u6b21\u5207\u6362\u56de\u6765\u4e4b\u540e\uff0c\u5e94\u7528\u518d\u6b21\u8bfb\u53d6\u8bbe\u5907\u5bc4\u5b58\u5668\uff0c\u53d1\u73b0 I/O \u8bf7\u6c42\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6839\u636e\u8fd4\u56de\u7684 I/O \u7ed3\u679c\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u4e86\u3002 \u8fd9\u6837\u7684\u8bdd\uff0c\u53ea\u8981\u540c\u65f6\u5b58\u5728\u7684\u5e94\u7528\u8db3\u591f\u591a\uff0c\u5c31\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u9690\u85cf I/O \u5916\u8bbe\u5904\u7406\u76f8\u5bf9\u4e8e CPU \u7684\u5ef6\u8fdf\uff0c\u4fdd\u8bc1 CPU \u4e0d\u5fc5\u6d6a\u8d39\u65f6\u95f4\u5728\u7b49\u5f85\u5916\u8bbe\u4e0a\uff0c\u800c\u662f\u51e0\u4e4e\u4e00\u76f4\u5728\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u4efb\u610f\u5207\u6362\u7684\u201c\u65e0\u9650\u201d\u591a CPU \u7684\u5047\u8c61\uff0c\u6211\u4eec\u9700\u8981 \u865a\u62df\u5316 CPU \u548c \u4e0a\u4e0b\u6587\u5207\u6362 \u3002</p>"},{"location":"cs/os/ostep/04processes.html#_1","title":"\u4f5c\u4e1a","text":"<p>Question</p> <p>1\uff0e\u7528\u4ee5\u4e0b\u6807\u5fd7\u8fd0\u884c\u7a0b\u5e8f\uff1a./process-run.py -l 5:100,5:100\u3002CPU \u5229\u7528\u7387\uff08CPU \u4f7f\u7528\u65f6\u95f4\u7684\u767e\u5206\u6bd4\uff09\u5e94\u8be5\u662f\u591a\u5c11\uff1f\u4e3a\u4ec0\u4e48\u4f60\u77e5\u9053\u8fd9\u4e00\u70b9\uff1f\u5229\u7528 -c \u6807\u8bb0\u67e5\u770b\u4f60\u7684\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002</p> <p>Answer</p> <p><code>5</code> \u662f\u6307\u4ee4\u6570\u91cf\uff0c<code>100</code> \u662f \u4e0d\u5207\u6362 IO \u7684\u673a\u7387\uff0c\u6240\u4ee5\u8fd9\u662f\u4e24\u4e2a\u4e94\u6761\u6307\u4ee4\u7684\u7eaf CPU \u7a0b\u5e8f\uff0c\u5b83\u4eec\u5e94\u8be5\u4f1a\u4e00\u76f4\u4f7f\u7528 CPU \uff0c\u5229\u7528\u7387\u4e3a 100% \u3002</p> python process-run.py -l 5:100,5:100 -c<pre><code>Time        PID: 0        PID: 1           CPU           IOs\n  1        RUN:cpu         READY             1\n  2        RUN:cpu         READY             1\n  3        RUN:cpu         READY             1\n  4        RUN:cpu         READY             1\n  5        RUN:cpu         READY             1\n  6           DONE       RUN:cpu             1\n  7           DONE       RUN:cpu             1\n  8           DONE       RUN:cpu             1\n  9           DONE       RUN:cpu             1\n 10           DONE       RUN:cpu             1\n</code></pre> <p>Question</p> <p>2\uff0e\u73b0\u5728\u7528\u8fd9\u4e9b\u6807\u5fd7\u8fd0\u884c\uff1a./process-run.py -l 4:100,1:0\u3002\u8fd9\u4e9b\u6807\u5fd7\u6307\u5b9a\u4e86\u4e00\u4e2a\u5305\u542b 4 \u6761\u6307\u4ee4\u7684\u8fdb\u7a0b\uff08\u90fd\u8981\u4f7f\u7528 CPU\uff09\uff0c\u5e76\u4e14\u53ea\u662f\u7b80\u5355\u5730\u53d1\u51fa I/O \u5e76\u7b49\u5f85\u5b83\u5b8c\u6210\u3002\u5b8c\u6210\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f\u5229\u7528-c \u68c0\u67e5\u4f60\u7684\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002</p> <p>Answer</p> <p>IO \u64cd\u4f5c\u65f6\u957f\u9ed8\u8ba4\u503c\u662f <code>5</code> \uff0c\u6240\u4ee5\u4e00\u5171\u9700\u8981 <code>4 + 7 = 11</code> \u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u56e0\u4e3a <code>io</code> \u548c <code>io_done</code> \u64cd\u4f5c\u4e5f\u5360\u7528\u65f6\u95f4\uff0c\u6240\u4ee5\u662f <code>7</code> \u4e0d\u662f <code>5</code> \u3002</p> python process-run.py -l 4:100,1:0 -c<pre><code>Time        PID: 0        PID: 1           CPU           IOs\n  1        RUN:cpu         READY             1\n  2        RUN:cpu         READY             1\n  3        RUN:cpu         READY             1\n  4        RUN:cpu         READY             1\n  5           DONE        RUN:io             1\n  6           DONE       BLOCKED                           1\n  7           DONE       BLOCKED                           1\n  8           DONE       BLOCKED                           1\n  9           DONE       BLOCKED                           1\n 10           DONE       BLOCKED                           1\n 11*          DONE   RUN:io_done             1\n</code></pre> <p>Question</p> <p>3\uff0e\u73b0\u5728\u4ea4\u6362\u8fdb\u7a0b\u7684\u987a\u5e8f\uff1a./process-run.py -l 1:0,4:100\u3002\u73b0\u5728\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u4ea4\u6362\u987a\u5e8f\u662f\u5426\u91cd\u8981\uff1f\u4e3a\u4ec0\u4e48\uff1f\u540c\u6837\uff0c\u7528-c \u770b\u770b\u4f60\u7684\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002</p> <p>Answer</p> <p>\u5982\u679c\u5148 <code>RUN:io</code> \u7684\u8bdd\uff0c\u5c31\u4f1a\u8282\u7701\u5f88\u591a\u65f6\u95f4\uff0c\u56e0\u4e3a\u4e4b\u524d\u7a0b\u5e8f 0 \u7ed3\u675f\u4e86\u624d\u5f00\u59cb IO \uff0c\u6d6a\u8d39\u4e86\u4e00\u4e9b\u3002</p> python process-run.py -l 1:0,4:100 -c<pre><code>Time        PID: 0        PID: 1           CPU           IOs\n  1         RUN:io         READY             1\n  2        BLOCKED       RUN:cpu             1             1\n  3        BLOCKED       RUN:cpu             1             1\n  4        BLOCKED       RUN:cpu             1             1\n  5        BLOCKED       RUN:cpu             1             1\n  6        BLOCKED          DONE                           1\n  7*   RUN:io_done          DONE             1\n</code></pre> <p>Question</p> <p>4\uff0e\u73b0\u5728\u63a2\u7d22\u53e6\u4e00\u4e9b\u6807\u5fd7\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u6807\u5fd7\u662f-S\uff0c\u5b83\u51b3\u5b9a\u4e86\u5f53\u8fdb\u7a0b\u53d1\u51fa I/O \u65f6\u7cfb\u7edf\u5982\u4f55\u53cd\u5e94\u3002\u5c06\u6807\u5fd7\u8bbe\u7f6e\u4e3a SWITCH_ON_END\uff0c\u5728\u8fdb\u7a0b\u8fdb\u884c I/O \u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u5c06\u4e0d\u4f1a\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800c\u662f\u7b49\u5f85\u8fdb\u7a0b\u5b8c\u6210\u3002\u5f53\u4f60\u8fd0\u884c\u4ee5\u4e0b\u4e24\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u4e00\u4e2a\u6267\u884c I/O\uff0c\u53e6\u4e00\u4e2a\u6267\u884c CPU \u5de5\u4f5c\u3002\uff08-l 1:0,4:100 -c -S SWITCH_ON_END\uff09</p> <p>Answer</p> <p>\u5982\u679c\u5728 IO \u64cd\u4f5c\u7684\u7a0b\u5e8f\u4e0d\u8ba9\u51fa CPU \u7684\u8bdd\uff0c\u5176\u4ed6\u7a0b\u5e8f\u53ea\u80fd\u4e00\u76f4\u7b49\u5f85\u4e86\u3002</p> python process-run.py -l 1:0,4:100 -c -S SWITCH_ON_END<pre><code>Time        PID: 0        PID: 1           CPU           IOs\n  1         RUN:io         READY             1\n  2        BLOCKED         READY                           1\n  3        BLOCKED         READY                           1\n  4        BLOCKED         READY                           1\n  5        BLOCKED         READY                           1\n  6        BLOCKED         READY                           1\n  7*   RUN:io_done         READY             1\n  8           DONE       RUN:cpu             1\n  9           DONE       RUN:cpu             1\n 10           DONE       RUN:cpu             1\n 11           DONE       RUN:cpu             1\n</code></pre> <p>Question</p> <p>5\uff0e\u73b0\u5728\uff0c\u8fd0\u884c\u76f8\u540c\u7684\u8fdb\u7a0b\uff0c\u4f46\u5207\u6362\u884c\u4e3a\u8bbe\u7f6e\uff0c\u5728\u7b49\u5f85 I/O \u65f6\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\uff08-l 1:0,4:100-c -S SWITCH_ON_IO\uff09\u3002\u73b0\u5728\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5229\u7528-c \u6765\u786e\u8ba4\u4f60\u7684\u7b54\u6848\u662f\u5426\u6b63\u786e\u3002</p> <p>Answer</p> <p><code>SWITCH_ON_IO</code> \u5c31\u662f\u9ed8\u8ba4\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u548c\u4e0a\u4e0a\u6b21\u8fd0\u884c\u7ed3\u679c\u4e0d\u4f1a\u6709\u5dee\u522b\u3002</p> python process-run.py -l 1:0,4:100 -c -S SWITCH_ON_IO<pre><code>Time        PID: 0        PID: 1           CPU           IOs\n  1         RUN:io         READY             1\n  2        BLOCKED       RUN:cpu             1             1\n  3        BLOCKED       RUN:cpu             1             1\n  4        BLOCKED       RUN:cpu             1             1\n  5        BLOCKED       RUN:cpu             1             1\n  6        BLOCKED          DONE                           1\n  7*   RUN:io_done          DONE             1\n</code></pre> <p>Question</p> <p>6\uff0e\u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u884c\u4e3a\u662f I/O \u5b8c\u6210\u65f6\u8981\u505a\u4ec0\u4e48\u3002\u5229\u7528-I IO_RUN_LATER\uff0c\u5f53 I/O \u5b8c\u6210\u65f6\uff0c\u53d1\u51fa\u5b83\u7684\u8fdb\u7a0b\u4e0d\u4e00\u5b9a\u9a6c\u4e0a\u8fd0\u884c\u3002\u76f8\u53cd\uff0c\u5f53\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e00\u76f4\u8fd0\u884c\u3002\u5f53\u4f60\u8fd0\u884c\u8fd9\u4e2a\u8fdb\u7a0b\u7ec4\u5408\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\uff08./process-run.py -l 3:0,5:100,5:100,5:100 -S SWITCH_ON_IO -I IO_RUN_LATER -c -p\uff09\u7cfb\u7edf\u8d44\u6e90\u662f\u5426\u88ab\u6709\u6548\u5229\u7528\uff1f</p> <p>Answer</p> <p>\u7a0b\u5e8f 0 \u8fd0\u884c\u5b8c\u4e0d\u4f1a\u7acb\u9a6c\u8fd0\u884c\uff0c\u4f1a\u5207\u5230 <code>READY</code> \u72b6\u6001\uff0c\u7b49\u5f85\u5176\u4ed6\u7a0b\u5e8f\u4ea4\u51fa CPU \u4f7f\u7528\u6743\u3002 \u6d6a\u8d39\u4e86\u4e00\u4e9b\u7cfb\u7edf\u8d44\u6e90\uff0c\u7a0b\u5e8f 2 \u548c 3 \u4e00\u76f4\u5360\u7528\u7740 CPU \u5bfc\u81f4\u7a0b\u5e8f 1 \u6ca1\u6cd5\u8fdb\u884c\u4e0b\u4e00\u4e2a IO \u64cd\u4f5c\uff0c\u5982\u679c IO \u64cd\u4f5c \u4e0e CPU \u64cd\u4f5c\u4e00\u8d77\u6267\u884c\u5c31\u4f1a\u66f4\u8282\u7701\u3002</p> python process-run.py -l 3:0,5:100,5:100,5:100 -S SWITCH_ON_IO -I IO_RUN_LATER -c -p<pre><code>Time        PID: 0        PID: 1        PID: 2        PID: 3           CPU           IOs\n  1         RUN:io         READY         READY         READY             1\n  2        BLOCKED       RUN:cpu         READY         READY             1             1\n  3        BLOCKED       RUN:cpu         READY         READY             1             1\n  4        BLOCKED       RUN:cpu         READY         READY             1             1\n  5        BLOCKED       RUN:cpu         READY         READY             1             1\n  6        BLOCKED       RUN:cpu         READY         READY             1             1\n  7*         READY          DONE       RUN:cpu         READY             1\n  8          READY          DONE       RUN:cpu         READY             1\n  9          READY          DONE       RUN:cpu         READY             1\n 10          READY          DONE       RUN:cpu         READY             1\n 11          READY          DONE       RUN:cpu         READY             1\n 12          READY          DONE          DONE       RUN:cpu             1\n 13          READY          DONE          DONE       RUN:cpu             1\n 14          READY          DONE          DONE       RUN:cpu             1\n 15          READY          DONE          DONE       RUN:cpu             1\n 16          READY          DONE          DONE       RUN:cpu             1\n 17    RUN:io_done          DONE          DONE          DONE             1\n 18         RUN:io          DONE          DONE          DONE             1\n 19        BLOCKED          DONE          DONE          DONE                           1\n 20        BLOCKED          DONE          DONE          DONE                           1\n 21        BLOCKED          DONE          DONE          DONE                           1\n 22        BLOCKED          DONE          DONE          DONE                           1\n 23        BLOCKED          DONE          DONE          DONE                           1\n 24*   RUN:io_done          DONE          DONE          DONE             1\n 25         RUN:io          DONE          DONE          DONE             1\n 26        BLOCKED          DONE          DONE          DONE                           1\n 27        BLOCKED          DONE          DONE          DONE                           1\n 28        BLOCKED          DONE          DONE          DONE                           1\n 29        BLOCKED          DONE          DONE          DONE                           1\n 30        BLOCKED          DONE          DONE          DONE                           1\n 31*   RUN:io_done          DONE          DONE          DONE             1\n\nStats: Total Time 31\nStats: CPU Busy 21 (67.74%)\nStats: IO Busy  15 (48.39%)\n</code></pre> <p>Question</p> <p>7\uff0e\u73b0\u5728\u8fd0\u884c\u76f8\u540c\u7684\u8fdb\u7a0b\uff0c\u4f46\u4f7f\u7528-I IO_RUN_IMMEDIATE \u8bbe\u7f6e\uff0c\u8be5\u8bbe\u7f6e\u7acb\u5373\u8fd0\u884c\u53d1\u51faI/O \u7684\u8fdb\u7a0b\u3002\u8fd9\u79cd\u884c\u4e3a\u6709\u4f55\u4e0d\u540c\uff1f\u4e3a\u4ec0\u4e48\u8fd0\u884c\u4e00\u4e2a\u521a\u521a\u5b8c\u6210 I/O \u7684\u8fdb\u7a0b\u4f1a\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f</p> <p>Answer</p> <p>I/O \u5b8c\u6210\uff0c\u4e00\u822c\u610f\u5473\u7740\u8fdb\u7a0b\u5df2\u7ecf\u83b7\u5f97\u4e86\u6267\u884c\u6240\u9700\u7684\u8d44\u6e90\u3002\u7acb\u5373\u8fd0\u884c\u8fd9\u6837\u7684\u8fdb\u7a0b\u53ef\u4ee5\u51cf\u5c11\u5728\u51c6\u5907\u72b6\u6001\u4e0b\u7684\u7b49\u5f85\u65f6\u95f4\u3002 \u5f53\u7136\u8fd9\u91cc\u56e0\u4e3a\u5b83\u53ea\u6709 IO \u64cd\u4f5c\uff0c\u6240\u4ee5\u4e00\u76f4\u8fd0\u884c\u5b83\u603b\u6ca1\u9519\u3002</p> python process-run.py -l 3:0,5:100,5:100,5:100 -S SWITCH_ON_IO -I IO_RUN_IMMEDIATE -c -p<pre><code>Time        PID: 0        PID: 1        PID: 2        PID: 3           CPU           IOs\n  1         RUN:io         READY         READY         READY             1\n  2        BLOCKED       RUN:cpu         READY         READY             1             1\n  3        BLOCKED       RUN:cpu         READY         READY             1             1\n  4        BLOCKED       RUN:cpu         READY         READY             1             1\n  5        BLOCKED       RUN:cpu         READY         READY             1             1\n  6        BLOCKED       RUN:cpu         READY         READY             1             1\n  7*   RUN:io_done          DONE         READY         READY             1\n  8         RUN:io          DONE         READY         READY             1\n  9        BLOCKED          DONE       RUN:cpu         READY             1             1\n 10        BLOCKED          DONE       RUN:cpu         READY             1             1\n 11        BLOCKED          DONE       RUN:cpu         READY             1             1\n 12        BLOCKED          DONE       RUN:cpu         READY             1             1\n 13        BLOCKED          DONE       RUN:cpu         READY             1             1\n 14*   RUN:io_done          DONE          DONE         READY             1\n 15         RUN:io          DONE          DONE         READY             1\n 16        BLOCKED          DONE          DONE       RUN:cpu             1             1\n 17        BLOCKED          DONE          DONE       RUN:cpu             1             1\n 18        BLOCKED          DONE          DONE       RUN:cpu             1             1\n 19        BLOCKED          DONE          DONE       RUN:cpu             1             1\n 20        BLOCKED          DONE          DONE       RUN:cpu             1             1\n 21*   RUN:io_done          DONE          DONE          DONE             1\n\nStats: Total Time 21\nStats: CPU Busy 21 (100.00%)\nStats: IO Busy  15 (71.43%)\n</code></pre> <p>Question</p> <p>8\uff0e\u73b0\u5728\u8fd0\u884c\u4e00\u4e9b\u968f\u673a\u751f\u6210\u7684\u8fdb\u7a0b\uff0c\u4f8b\u5982-s 1 -l 3:50,3:50, -s 2 -l 3:50,3:50, -s 3 -l 3:50,3:50\u3002\u770b\u770b\u4f60\u662f\u5426\u80fd\u9884\u6d4b\u8ffd\u8e2a\u8bb0\u5f55\u4f1a\u5982\u4f55\u53d8\u5316\uff1f\u5f53\u4f60\u4f7f\u7528-I IO_RUN_IMMEDIATE \u4e0e-I IO_RUN_LATER \u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5f53\u4f60\u4f7f\u7528-S SWITCH_ON_IO \u4e0e-S SWITCH_ON_END \u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>Answer</p> <p>\u7d2f\u4e86\uff0c\u6d4b\u4e0d\u52a8\u4e86\u3002</p>"},{"location":"cs/os/ostep/05process_api.html","title":"\u7b2c 5 \u7ae0 \u63d2\u53d9\uff1a\u8fdb\u7a0b API","text":"<p>\u8fd9\u7ae0\u53ea\u662f\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u6709\u5173\u8fdb\u7a0b\u7684 API \u3002</p> \u7cfb\u7edf\u8c03\u7528 \u529f\u80fd \u8fd4\u56de\u503c \u5907\u6ce8 fork \u521b\u5efa\u5b50\u8fdb\u7a0b \u5728\u7236\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 PID \uff0c\u5b50\u8fdb\u7a0b\u4e2d\u8fd4\u56de <code>0</code> \uff0c\u5931\u8d25\u65f6\u8fd4\u56de <code>-1</code> \u5b50\u8fdb\u7a0b\u4f1a\u590d\u5236\u4e00\u4efd\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u5185\u5bb9\uff0c\u4f46\u5b83\u4eec\u5728\u4e0d\u540c\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd0\u884c <code>mmap</code> \u7b49\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd wait \u7b49\u5f85\u5b50\u8fdb\u7a0b\u8fd0\u884c\u5b8c\u6bd5 \u6210\u529f\u65f6\u8fd4\u56de\u7ed3\u675f\u7684\u5b50\u8fdb\u7a0b PID \uff0c\u5931\u8d25\u65f6\u8fd4\u56de <code>-1</code> \u8c03\u7528 <code>wait()</code> \u7b49\u4e8e\u8c03\u7528 <code>waitpid(-1, &amp;wstatus, 0)</code> \uff0c\u4f1a\u7b49\u5f85\u4efb\u610f\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7ed3\u675f exec \u6267\u884c\u65b0\u7684\u7a0b\u5e8f \u53ea\u6709\u53d1\u751f\u9519\u8bef\u624d\u4f1a\u8fd4\u56de\uff0c\u8fd4\u56de <code>-1</code> \u5b83\u5b9e\u9645\u505a\u7684\u662f\u4f7f\u7528\u65b0\u7684\u8fdb\u7a0b\u6620\u50cf\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\u6620\u50cf\uff0c\u4ece\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u52a0\u8f7d\u4ee3\u7801\u548c\u9759\u6001\u6570\u636e\uff0c\u5e76\u7528\u5b83\u8986\u5199\u81ea\u5df1\u7684\u4ee3\u7801\u6bb5\uff08\u4ee5\u53ca\u9759\u6001\u6570\u636e\uff09\uff0c\u5806\u3001\u6808\u53ca\u5176\u4ed6\u5185\u5b58\u7a7a\u95f4\u4e5f\u4f1a\u88ab\u91cd\u65b0\u521d\u59cb\u5316\u3002\u6240\u4ee5 <code>exec()</code> \u7b49\u51fd\u6570\u6267\u884c\u6210\u529f\u540e\u6ca1\u6cd5\u8fd4\u56de\uff0c\u56e0\u4e3a\u539f\u6709\u7684\u7a0b\u5e8f\u5df2\u7ecf\u88ab\u66ff\u6362\u4e86 <p>\u4f5c\u4e1a\u4e2d\u4f1a\u7528\u5230\u66f4\u591a\u3002</p> <p>\u624b\u518c\uff1aLinux man pages online</p>"},{"location":"cs/os/ostep/05process_api.html#_1","title":"\u4f5c\u4e1a","text":"<p>Question</p> <p>1\uff0e\u7f16\u5199\u4e00\u4e2a\u8c03\u7528 fork()\u7684\u7a0b\u5e8f\u3002\u5728\u8c03\u7528 fork()\u4e4b\u524d\uff0c\u8ba9\u4e3b\u8fdb\u7a0b\u8bbf\u95ee\u4e00\u4e2a\u53d8\u91cf\uff08\u4f8b\u5982 x\uff09\u5e76\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u503c\uff08\u4f8b\u5982 100\uff09\u3002\u5b50\u8fdb\u7a0b\u4e2d\u7684\u53d8\u91cf\u6709\u4ec0\u4e48\u503c\uff1f\u5f53\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u90fd\u6539\u53d8 x\u7684\u503c\uff0c\u53d8\u91cf\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>Answer</p> q1.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    int x;\n    x = 100;\n\n    pid_t rc = fork();\n    assert(rc &gt;= 0);\n\n    if (rc == 0) {\n        for (size_t i = 0; i &lt; 5; ++i) {\n            printf(\"Child(%d):\\tx = %d\\n\", getpid(), x);\n            x += 100;\n            printf(\"Child(%d):\\tx += 100\\n\", getpid());\n            sleep(1);\n        }\n    } else {\n        for (size_t i = 0; i &lt; 5; ++i) {\n            printf(\"Parent(%d):\\tx = %d\\n\", getpid(), x);\n            x += 70;\n            printf(\"Parent(%d):\\tx += 70\\n\", getpid());\n            sleep(1);\n        }\n    }\n\n    return 0;\n}\n</code></pre> cc q1.c -o q1 -Wall -Wextra -pedantic &amp;&amp; ./q1<pre><code>Parent(13645):  x = 100\nParent(13645):  x += 70\nChild(13646):   x = 100\nChild(13646):   x += 100\nParent(13645):  x = 170\nParent(13645):  x += 70\nChild(13646):   x = 200\nChild(13646):   x += 100\nParent(13645):  x = 240\nParent(13645):  x += 70\nChild(13646):   x = 300\nChild(13646):   x += 100\nChild(13646):   x = 400\nParent(13645):  x = 310\nChild(13646):   x += 100\nParent(13645):  x += 70\nChild(13646):   x = 500\nParent(13645):  x = 380\nChild(13646):   x += 100\nParent(13645):  x += 70\n</code></pre> <p>\u5b50\u8fdb\u7a0b\u83b7\u5f97\u4e86\u7236\u8fdb\u7a0b\u6570\u636e\u6bb5\u3001\u5806\u548c\u6808\u7684\u526f\u672c\uff0c\u610f\u5473\u7740\u5b50\u8fdb\u7a0b\u4e2d\u7684 <code>x</code> \u4f1a\u6709\u4e0e\u7236\u8fdb\u7a0b\u76f8\u540c\u7684\u521d\u59cb\u503c <code>100</code> \uff0c\u4f46\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4e2d\u7684 <code>x</code> \u662f\u5f7c\u6b64\u72ec\u7acb\u7684\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002</p> <p>Question</p> <p>2\uff0e\u7f16\u5199\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6\u7684\u7a0b\u5e8f\uff08\u4f7f\u7528 open()\u7cfb\u7edf\u8c03\u7528\uff09\uff0c\u7136\u540e\u8c03\u7528 fork()\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u3002\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bbf\u95ee open()\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u5417\uff1f\u5f53\u5b83\u4eec\u5e76\u53d1\uff08\u5373\u540c\u65f6\uff09\u5199\u5165\u6587\u4ef6\u65f6\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>Answer</p> q2.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    pid_t rc = fork();\n    assert(rc &gt;= 0);\n\n    int fd = open(\"/tmp/testfile\", O_WRONLY | O_CREAT | O_APPEND, S_IRWXU);\n    assert(fd &gt; -1);\n\n    if (rc == 0) {\n        assert(fcntl(fd, F_GETFL, 0) != -1);\n        assert(write(fd, \"bbbbbbbb\", 8) != -1);\n    } else {\n        assert(fcntl(fd, F_GETFL, 0) != -1);\n        assert(write(fd, \"aaaaaaaa\", 8) != -1);\n    }\n\n    close(fd);\n    return 0;\n}\n</code></pre> cc q2.c -o q2 -Wall -Wextra -pedantic &amp;&amp; ./q2 &amp;&amp; cat /tmp/testfile<pre><code>aaaaaaaabbbbbbbb\n</code></pre> <p>\u6587\u4ef6\u63cf\u8ff0\u7b26\u5728\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4e14\u5173\u95ed\u63cf\u8ff0\u7b26\u4e92\u4e0d\u5f71\u54cd\u3002 \u540c\u65f6\u5199\u5165\u7684\u8bdd\uff0c\u597d\u50cf\u6ca1\u95ee\u9898\uff1f\u6570\u636e\u91cf\u5c0f\u4e8e <code>PIPE_BUF</code> \u65f6 <code>write</code> \u770b\u8d77\u6765\u50cf\u539f\u5b50\u7684\u3002</p> <p>Question</p> <p>3\uff0e\u4f7f\u7528 fork()\u7f16\u5199\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u3002\u5b50\u8fdb\u7a0b\u5e94\u6253\u5370\u201chello\u201d\uff0c\u7236\u8fdb\u7a0b\u5e94\u6253\u5370\u201cgoodbye\u201d\u3002\u4f60\u5e94\u8be5\u5c1d\u8bd5\u786e\u4fdd\u5b50\u8fdb\u7a0b\u59cb\u7ec8\u5148\u6253\u5370\u3002\u4f60\u80fd\u5426\u4e0d\u5728\u7236\u8fdb\u7a0b\u8c03\u7528 wait()\u800c\u505a\u5230\u8fd9\u4e00\u70b9\u5462\uff1f</p> <p>Answer</p> q3.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    pid_t rc = vfork();\n    assert(rc &gt;= 0);\n\n    if (rc == 0) {\n        printf(\"hello\");\n    } else {\n        printf(\"goodbye\");\n    }\n\n    return 0;\n}\n</code></pre> cc q3.c -o q3 -Wall -Wextra -pedantic &amp;&amp; ./q3<pre><code>hellogoodbye\n</code></pre> <p><code>vfork</code> \u4e0e <code>fork</code> \u7684\u533a\u522b\u662f\uff0c\u5b83\u4f1a\u963b\u585e\u7236\u8fdb\u7a0b\u76f4\u5230\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u800c\u4e14\u4e0d\u4f1a\u5b8c\u5168\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002</p> <p>Question</p> <p>4\uff0e\u7f16\u5199\u4e00\u4e2a\u8c03\u7528 fork()\u7684\u7a0b\u5e8f\uff0c\u7136\u540e\u8c03\u7528\u67d0\u79cd\u5f62\u5f0f\u7684 exec()\u6765\u8fd0\u884c\u7a0b\u5e8f/bin/ls\u3002\u770b\u770b\u662f\u5426\u53ef\u4ee5\u5c1d\u8bd5 exec()\u7684\u6240\u6709\u53d8\u4f53\uff0c\u5305\u62ec execl()\u3001execle()\u3001execlp()\u3001execv()\u3001execvp()\u548c execvP()\u3002\u4e3a\u4ec0\u4e48\u540c\u6837\u7684\u57fa\u672c\u8c03\u7528\u4f1a\u6709\u8fd9\u4e48\u591a\u53d8\u79cd\uff1f</p> <p>\u53d8\u79cd\u5f88\u591a\uff0c\u547d\u540d\u89c4\u5219\u90fd\u662f <code>exec</code> + \u540e\u7f00\u3002</p> <ul> <li><code>l</code> \u4ee3\u8868 list \uff0c\u4ee5\u53ef\u53d8\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u9700\u8981 <code>(char*)NULL</code> \u7ed3\u5c3e</li> <li><code>v</code> \u4ee3\u8868 vector \uff0c\u4ee5 <code>char *argv[]</code> \u7684\u5f62\u5f0f\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u9700\u8981 <code>NULL</code> \u7ed3\u5c3e</li> <li><code>e</code> \u4ee3\u8868 environment \uff0c\u652f\u6301\u4f20\u9012\u73af\u5883\u53d8\u91cf\uff0c\u9700\u8981 <code>NULL</code> \u7ed3\u5c3e</li> <li><code>p</code> \u4ee3\u8868 path \uff0c\u5728 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u641c\u7d22\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u63d0\u4f9b\u5b8c\u6574\u8def\u5f84</li> </ul> <p>\u4f8b\u5982 <code>execve</code> \u9700\u8981\u4f20\u9012\u53ef\u6267\u884c\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u5e76\u4f7f\u7528\u6570\u7ec4\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u4e14\u53ef\u4ee5\u4f20\u9012\u73af\u5883\u53d8\u91cf\u3002</p> <p>\u8fd9\u4e9b\u53d8\u79cd\u63d0\u4f9b\u4e86\u4e0d\u540c\u7ea7\u522b\u7684\u7075\u6d3b\u6027\u548c\u63a7\u5236\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u3002</p> <pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    for (int i = 0; i &lt; 5; i++) {\n        pid_t pid = fork();\n        assert(pid &gt;= 0);\n\n        if (pid == 0) {\n            char* args[] = {\"ls\", \"-l\", NULL};\n            char* env[] = {NULL};\n\n            switch (i) {\n                case 0:\n                    printf(\"execl:\\n\");\n                    execl(\"/bin/ls\", \"ls\", \"-l\", (char*)NULL);\n                    break;\n                case 1:\n                    printf(\"execle:\\n\");\n                    execle(\"/bin/ls\", \"ls\", \"-l\", (char*)NULL, env);\n                    break;\n                case 2:\n                    printf(\"execlp:\\n\");\n                    execlp(\"ls\", \"ls\", \"-l\", (char*)NULL);\n                    break;\n                case 3:\n                    printf(\"execv:\\n\");\n                    execv(\"/bin/ls\", args);\n                    break;\n                case 4:\n                    printf(\"execvp:\\n\");\n                    execvp(\"ls\", args);\n                    break;\n            }\n\n            perror(\"exec\");\n            return 1;\n        } else {\n            wait(NULL);\n        }\n    }\n\n    return 0;\n}\n</code></pre> <p>Question</p> <p>5\uff0e\u73b0\u5728\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5728\u7236\u8fdb\u7a0b\u4e2d\u4f7f\u7528 wait()\uff0c\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\u3002wait()\u8fd4\u56de\u4ec0\u4e48\uff1f\u5982\u679c\u4f60\u5728\u5b50\u8fdb\u7a0b\u4e2d\u4f7f\u7528 wait()\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>Answer</p> q5.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    pid_t pid = fork();\n    assert(pid &gt;= 0);\n\n    if (pid == 0) {\n        printf(\"child PID: %d\\n\", getpid());\n        return wait(NULL);\n    } else {\n        int status;\n        pid_t child_pid = wait(&amp;status);\n        assert(child_pid &gt;= 0);\n\n        if (WIFEXITED(status)) {\n            printf(\"normal termination of child (%d), exit status: %d\\n\",\n                   child_pid, WEXITSTATUS(status));\n        }\n        return 0;\n    }\n}\n</code></pre> cc q5.c -o q5 -Wall -Wextra -pedantic &amp;&amp; ./q5<pre><code>child PID: 46008\nnormal termination of child (46008), exit status: 255\n</code></pre> <p>\u7236\u8fdb\u7a0b\u4e2d\u4f7f\u7528 <code>wait()</code> \u8fd4\u56de\u5df2\u505c\u6b62\u5b50\u8fdb\u7a0b\u7684 PID \uff0c\u8fd8\u4f1a\u987a\u5e26\u8bbe\u7f6e\u72b6\u6001\u4fe1\u606f\u3002 \u5982\u679c\u5728\u5b50\u8fdb\u7a0b\uff08\u6ca1\u6709\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b\uff09\u4e2d\u4f7f\u7528 <code>wait()</code> \u4f1a\u51fa\u9519\u8fd4\u56de <code>-1</code> \u3002</p> <p>Question</p> <p>6\uff0e\u5bf9\u524d\u4e00\u4e2a\u7a0b\u5e8f\u7a0d\u4f5c\u4fee\u6539\uff0c\u8fd9\u6b21\u4f7f\u7528 waitpid()\u800c\u4e0d\u662f wait()\u3002\u4ec0\u4e48\u65f6\u5019 waitpid()\u4f1a\u6709\u7528\uff1f</p> <p>Answer</p> p6.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    pid_t pid = fork();\n    assert(pid &gt;= 0);\n\n    if (pid == 0) {\n        printf(\"child PID: %d\\n\", getpid());\n        return wait(NULL);\n    } else {\n        int status;\n        pid_t child_pid = waitpid(pid, &amp;status, WUNTRACED);\n        assert(child_pid &gt;= 0);\n\n        if (WIFEXITED(status)) {\n            printf(\"normal termination of child (%d), exit status: %d\\n\",\n                   child_pid, WEXITSTATUS(status));\n        }\n        return 0;\n    }\n}\n</code></pre> cc q6.c -o q6 -Wall -Wextra -pedantic &amp;&amp; ./q6<pre><code>child PID: 46011\nnormal termination of child (46011), exit status: 255\n</code></pre> <p><code>waitpid</code> \u53ef\u4ee5\u7b49\u5f85\u67d0\u4e2a\u6307\u5b9a PID \u7684\u5b50\u8fdb\u7a0b\uff0c\u800c\u4e14\u62e5\u6709\u66f4\u7075\u6d3b\u7684\u9009\u9879\u53c2\u6570\u3002</p> <p>Question</p> <p>7\uff0e\u7f16\u5199\u4e00\u4e2a\u521b\u5efa\u5b50\u8fdb\u7a0b\u7684\u7a0b\u5e8f\uff0c\u7136\u540e\u5728\u5b50\u8fdb\u7a0b\u4e2d\u5173\u95ed\u6807\u51c6\u8f93\u51fa\uff08STDOUT_FILENO\uff09\u3002\u5982\u679c\u5b50\u8fdb\u7a0b\u5728\u5173\u95ed\u63cf\u8ff0\u7b26\u540e\u8c03\u7528 printf()\u6253\u5370\u8f93\u51fa\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>Answer</p> q7.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    pid_t pid = fork();\n    assert(pid &gt;= 0);\n\n    if (pid == 0) {\n        close(STDOUT_FILENO);\n        printf(\"child PID: %d\\n\", getpid());\n    } else {\n        int status;\n        pid_t child_pid = wait(&amp;status);\n        assert(child_pid &gt;= 0);\n\n        if (WIFEXITED(status)) {\n            printf(\"normal termination of child (%d), exit status: %d\\n\",\n                   child_pid, WEXITSTATUS(status));\n        }\n    }\n    return 0;\n}\n</code></pre> cc q7.c -o q7 -Wall -Wextra -pedantic &amp;&amp; ./q7<pre><code>normal termination of child (47157), exit status: 0\n</code></pre> <p>\u540c\u4e4b\u524d\u7684\u4f8b\u5b50\uff0c\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ea\u5f71\u54cd\u672c\u8fdb\u7a0b\u3002</p> <p>Question</p> <p>8\uff0e\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u521b\u5efa\u4e24\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5e76\u4f7f\u7528 pipe()\u7cfb\u7edf\u8c03\u7528\uff0c\u5c06\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7684\u6807\u51c6\u8f93\u51fa\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7684\u6807\u51c6\u8f93\u5165\u3002</p> <p>Answer</p> q8.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    int fd[2];\n    assert(pipe(fd) != -1);\n\n    char buf[25] = {0};\n    pid_t child_process[2];\n\n    for (int i = 0; i &lt; 2; ++i) {\n        pid_t pid = fork();\n        assert(pid &gt;= 0);\n\n        if (pid == 0) {\n            switch (i) {\n                case 0:\n                    dup2(fd[1], STDOUT_FILENO);\n                    printf(\"Message from child %d\\n\", getpid());\n                    fflush(stdout);\n                    break;\n                case 1:\n                    dup2(fd[0], STDIN_FILENO);\n                    fgets(buf, 25, stdin);\n                    printf(\"Received message: %s\", buf);\n                    break;\n            }\n            return 0;\n        } else {\n            child_process[i] = pid;\n        }\n    }\n\n    waitpid(child_process[0], NULL, 0);\n    waitpid(child_process[1], NULL, 0);\n\n    return 0;\n}\n</code></pre> cc q8.c -o q8 -Wall -Wextra -pedantic &amp;&amp; ./q8<pre><code>Received message: Message from child 5786\n</code></pre>"},{"location":"cs/os/ostep/06direct_execution.html","title":"\u7b2c 6 \u7ae0 \u673a\u5236\uff1a\u53d7\u9650\u76f4\u63a5\u6267\u884c","text":"<p>\u8fd9\u7ae0\u662f\u8bb2\u7279\u6743\u7ea7\u673a\u5236\u548c\u8fdb\u7a0b\u8c03\u5ea6\u7684\uff0c\u4ecb\u7ecd\u865a\u62df\u5316 CPU \u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u5e94\uff1a</p> <ul> <li>rCore-Tutorial-Book \u7279\u6743\u7ea7\u673a\u5236</li> <li>rCore-Tutorial-Book \u591a\u9053\u7a0b\u5e8f\u4e0e\u5206\u65f6\u591a\u4efb\u52a1</li> </ul>"},{"location":"cs/os/ostep/06direct_execution.html#61","title":"6.1 \u57fa\u672c\u6280\u5de7\uff1a\u53d7\u9650\u76f4\u63a5\u6267\u884c","text":"<p>\u201c\u53d7\u9650\u201d\u548c\u201c\u76f4\u63a5\u6267\u884c\u201d\u3002</p> <p>\u76f4\u63a5\u6267\u884c\u6307\u7684\u662f\u76f4\u63a5\u5728 CPU \u4e0a\u8fd0\u884c\u7a0b\u5e8f\u3002\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u7a0b\u5e8f\u7684\u65f6\u5019\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u628a\u7a0b\u5e8f\u7684\u4ee3\u7801\u4ece\u78c1\u76d8\u52a0\u8f7d\u5230\u5185\u5b58\u91cc\uff0c\u627e\u5230\u5165\u53e3\u70b9\uff0c\u8df3\u8f6c\u8fdb\u53bb\u8fd0\u884c\u3002</p> \u64cd\u4f5c\u7cfb\u7edf \u7a0b\u5e8f \u5728\u8fdb\u7a0b\u5217\u8868\u4e0a\u521b\u5efa\u6761\u76ee\u4e3a\u7a0b\u5e8f\u5206\u914d\u5185\u5b58\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u6839\u636e <code>argc</code> / <code>argv</code> \u8bbe\u7f6e\u7a0b\u5e8f\u6808 \u6e05\u9664\u5bc4\u5b58\u5668\u6267\u884c <code>call main()</code> \u65b9\u6cd5 \u6267\u884c <code>main()</code> \u4ece <code>main</code> \u4e2d\u6267\u884c <code>return</code> \u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u5b58\u5c06\u8fdb\u7a0b\u4ece\u8fdb\u7a0b\u5217\u8868\u6e05\u9664 <p>\u8fd9\u79cd\u65b9\u6cd5\u5728\u865a\u62df\u5316 CPU \u65f6\u4f1a\u4ea7\u751f\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u600e\u4e48\u786e\u4fdd\u7a0b\u5e8f\u4e0d\u505a\u4efb\u4f55\u4e0d\u5e0c\u671b\u5b83\u505a\u7684\u4e8b\uff0c\u540c\u65f6\u8fd8\u80fd\u9ad8\u6548\u8fd0\u884c</li> <li>\u5982\u4f55\u8ba9\u8fdb\u7a0b\u505c\u4e0b\u6765\u5e76\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b</li> </ol> <p>\u201c\u53d7\u9650\u201d\uff0c\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u3002</p>"},{"location":"cs/os/ostep/06direct_execution.html#62-1","title":"6.2 \u95ee\u9898 1\uff1a\u53d7\u9650\u5236\u7684\u64cd\u4f5c","text":"<p>\u901a\u8fc7\u5f15\u5165\u65b0\u7684\u5904\u7406\u5668\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8ba9\u8fdb\u7a0b\u5728\u4e0d\u540c\u7a0b\u5ea6\u4e0a\u53d7\u9650\u3002</p> <p>\u6bd4\u5982\u5728 \u7528\u6237\u6a21\u5f0f \u4e0b\u8fdb\u7a0b\u4e0d\u80fd\u53d1\u9001 I/O \u8bf7\u6c42\uff0c\u4f1a\u5bfc\u81f4\u5904\u7406\u5668\u5f15\u53d1\u5f02\u5e38\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u7ec8\u6b62\u8fdb\u7a0b\u3002\u800c \u5185\u6838\u6a21\u5f0f \u53ef\u4ee5\u505a\u8fd9\u4e9b\u53d7\u9650\u6307\u4ee4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5c31\u8fd0\u884c\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u3002</p> <p>\u5982\u679c\u7528\u6237\u5e0c\u671b\u6267\u884c\u67d0\u79cd\u7279\u6743\u64cd\u4f5c\uff08\u5982\u4ece\u78c1\u76d8\u8bfb\u53d6\uff09\uff0c\u9700\u8981\u6267\u884c \u7cfb\u7edf\u8c03\u7528 \uff0c\u8fd9\u662f\u5185\u6838\u5411\u7528\u6237\u7a0b\u5e8f\u66b4\u9732\u7684\u67d0\u4e9b\u5173\u952e\u529f\u80fd\uff0c\u8b6c\u5982\u8bbf\u95ee\u6587\u4ef6\u7cfb\u7edf\u3001\u521b\u5efa\u9500\u6bc1\u8fdb\u7a0b\u3001\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1\uff0c\u4ee5\u53ca\u5206\u914d\u66f4\u591a\u5185\u5b58\u3002</p> <p>\u5982\u679c\u8981\u6267\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u9700\u8981\u6267\u884c\u7279\u6b8a\u7684\u6307\u4ee4\uff0c\u79f0\u4e3a \u9677\u5165\uff08Trap\uff09\uff0c\u5b83\u4f7f\u7a0b\u5e8f\u63a7\u5236\u6d41\u8df3\u5165\u5185\u6838\u5e76\u5c06\u7279\u6743\u7ea7\u522b\u63d0\u5347\u5230\u5185\u6838\u6a21\u5f0f\uff0c\u5982\u6b64\u4e00\u6765\u5c31\u53ef\u4ee5\u6267\u884c\u7279\u6743\u64cd\u4f5c\u4e86\uff0c\u5b8c\u6210\u540e\u518d\u8c03\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u6307\u4ee4\u4ece\u9677\u5165\u8fd4\u56de\u3002</p> <p>OSTEP \u7ffb\u8bd1\u4e3a\u201c\u9677\u9631\u201d\uff0crCore \u7ffb\u8bd1\u4e3a\u201c\u9677\u5165\u201d\uff0c\u603b\u4e4b...It's A Trap!</p> <p>\u786c\u4ef6\u901a\u8fc7\u63d0\u4f9b\u4e0d\u540c\u7684\u6267\u884c\u6a21\u5f0f\u6765\u534f\u52a9\u64cd\u4f5c\u7cfb\u7edf\u3002\u5728\u7528\u6237\u6a21\u5f0f\uff08user mode\uff09\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u5b8c\u5168\u8bbf\u95ee\u786c\u4ef6\u8d44\u6e90\u3002\u5728\u5185\u6838\u6a21\u5f0f\uff08kernel mode\uff09\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u8bbf\u95ee\u673a\u5668\u7684\u5168\u90e8\u8d44\u6e90\u3002\u8fd8\u63d0\u4f9b\u4e86\u9677\u5165\uff08trap\uff09\u5185\u6838\u548c\u4ece\u9677\u9631\u8fd4\u56de\uff08return-from-trap\uff09\u5230\u7528\u6237\u6a21\u5f0f\u7a0b\u5e8f\u7684\u7279\u522b\u8bf4\u660e\uff0c\u4ee5\u53ca\u4e00\u4e9b\u6307\u4ee4\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u544a\u8bc9\u786c\u4ef6\u9677\u9631\u8868\uff08trap table\uff09\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u3002</p> <p>\u8865\u5145\uff1a\u4e3a\u4ec0\u4e48\u7cfb\u7edf\u8c03\u7528\u770b\u8d77\u6765\u50cf\u8fc7\u7a0b\u8c03\u7528</p> <p>\u5728 C \u8bed\u8a00\u4e2d <code>open()</code>\u3001<code>read()</code> \u770b\u8d77\u6765\u5b8c\u5168\u662f\u8fc7\u7a0b\u8c03\u7528\u7684\u5f62\u5f0f\uff0c\u7cfb\u7edf\u662f\u5982\u4f55\u77e5\u9053\u5b83\u662f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u5462\uff1f \u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u8fc7\u7a0b\u8c03\u7528\uff0c\u4f46\u9690\u85cf\u5728\u5185\u90e8\u7684\u662f\u9677\u5165\u6307\u4ee4\u3002 \u5f53\u8c03\u7528 <code>open()</code> \u65f6\u6b63\u5728\u6267\u884c\u5bf9 C \u5e93\u7684\u8fc7\u7a0b\u8c03\u7528\uff0c\u4f46\u5728\u5e93\u51fd\u6570\u4e2d\u662f\u624b\u5de5\u7f16\u7801\u7684\u6c47\u7f16\u6307\u4ee4\uff0c\u4e3a\u4e86\u6b63\u786e\u5730\u7cfb\u7edf\u8c03\u7528\u3002 \u6240\u4ee5\uff0c\u80fd\u76f4\u63a5\u8c03\u7528\u5e93\u51fd\u6570\u6765\u9677\u5165\u64cd\u4f5c\u7cfb\u7edf\u662f\u56e0\u4e3a\u6709\u4eba\u5df2\u7ecf\u4e3a\u4f60\u5199\u4e86\u6c47\u7f16\u3002</p> \u64cd\u4f5c\u7cfb\u7edf@\u542f\u52a8\uff08\u5185\u6838\u6a21\u5f0f\uff09 \u786c\u4ef6 \u521d\u59cb\u5316\u9677\u9631\u8868 \u8bb0\u4f4f\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u7684\u5730\u5740 \u64cd\u4f5c\u7cfb\u7edf@\u8fd0\u884c\uff08\u5185\u6838\u6a21\u5f0f\uff09 \u786c\u4ef6 \u7a0b\u5e8f\uff08\u5e94\u7528\u6a21\u5f0f\uff09 \u5728\u8fdb\u7a0b\u5217\u8868\u4e0a\u521b\u5efa\u6761\u76ee\u4e3a\u7a0b\u5e8f\u5206\u914d\u5185\u5b58\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u6839\u636e <code>argv</code> \u8bbe\u7f6e\u7a0b\u5e8f\u6808\u7528\u5bc4\u5b58\u5668/\u7a0b\u5e8f\u8ba1\u6570\u5668\u586b\u5145\u5185\u6838\u6808\u4ece\u9677\u9631\u8fd4\u56de \u4ece\u5185\u6838\u6808\u6062\u590d\u5bc4\u5b58\u5668\u8f6c\u5411\u7528\u6237\u6a21\u5f0f\u8df3\u5230 <code>main</code> \u8fd0\u884c <code>main</code>\u2026\u2026\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\u9677\u5165\u64cd\u4f5c\u7cfb\u7edf \u5c06\u5bc4\u5b58\u5668\u4fdd\u5b58\u5230\u5185\u6838\u6808\u8f6c\u5411\u5185\u6838\u6a21\u5f0f\u8df3\u5230\u9677\u9631\u5904\u7406\u7a0b\u5e8f \u5904\u7406\u9677\u9631\u505a\u7cfb\u7edf\u8c03\u7528\u7684\u5de5\u4f5c\u4ece\u9677\u9631\u8fd4\u56de \u4ece\u5185\u6838\u6808\u6062\u590d\u5bc4\u5b58\u5668\u8f6c\u5411\u7528\u6237\u6a21\u5f0f\u8df3\u5230\u9677\u9631\u4e4b\u540e\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668 \u2026\u2026\u4ece <code>main</code> \u8fd4\u56de   \u9677\u5165\uff08\u901a\u8fc7 <code>exit()</code>\uff09 \u91ca\u653e\u8fdb\u7a0b\u7684\u5185\u5b58\u5c06\u8fdb\u7a0b\u4ece\u8fdb\u7a0b\u5217\u8868\u4e2d\u6e05\u9664"},{"location":"cs/os/ostep/06direct_execution.html#63-2","title":"6.3 \u95ee\u9898 2\uff1a\u5728\u8fdb\u7a0b\u4e4b\u95f4\u5207\u6362","text":"<p>\u5982\u679c\u8fdb\u7a0b\u5728 CPU \u4e0a\u8fd0\u884c\uff0c\u90a3\u64cd\u4f5c\u7cfb\u7edf\u5c31\u201c\u6ca1\u6709\u8fd0\u884c\u201d\uff0c\u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u6ca1\u8fd0\u884c\uff0c\u5b83\u5c31\u6ca1\u529e\u6cd5\u5207\u6362\u8fdb\u7a0b\u4e86\uff0c\u6240\u4ee5\u91cd\u70b9\u5728\u4e8e \u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u91cd\u65b0\u83b7\u5f97 CPU \u7684\u63a7\u5236\u6743\u3002</p>"},{"location":"cs/os/ostep/06direct_execution.html#_1","title":"\u534f\u4f5c\u5f0f\u8c03\u5ea6\uff1a\u7b49\u5f85\u7cfb\u7edf\u8c03\u7528","text":"<p>\u534f\u4f5c\u5f0f\u8c03\u5ea6\uff08Cooperative Scheduling\uff09\u91cc\uff0c\u64cd\u4f5c\u7cfb\u7edf\u76f8\u4fe1\u8fdb\u7a0b\u4f1a\u5408\u7406\u8fd0\u884c\uff0c\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u5c31\u901a\u8fc7 <code>yield</code> \u4e3b\u52a8\u628a CPU \u4ea4\u56de\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u8fdb\u7a0b\u65e0\u610f\u6216\u6709\u610f\u8fdb\u5165\u65e0\u9650\u5faa\u73af\uff0c\u4e0d\u4f7f\u7528 <code>yield</code> \uff0c\u4e5f\u4e0d\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u638c\u63a7\u4e3b\u52a8\u6743\uff0c\u90a3\u5c31\u6211\u4eec\u5c31\u88ab\u6c38\u8fdc\u5730\u201c\u56f0\u4f4f\u201d\u4e86\u3002</p> <p>\uff08\u5f53\u7136\uff0c\u8fd8\u6709\u4e07\u80fd\u5730\u89e3\u51b3\u65b9\u5f0f\u2014\u2014\u2014\u91cd\u542f\uff09</p>"},{"location":"cs/os/ostep/06direct_execution.html#_2","title":"\u975e\u534f\u4f5c\u65b9\u5f0f\uff1a\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u63a7\u5236","text":"<p>\u5173\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u91cd\u83b7 CPU \u7684\u63a7\u5236\u6743\uff0c\u4eba\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u7b54\u6848\uff1a\u65f6\u949f\u4e2d\u65ad\uff08timer interrupt\uff09\u3002</p> <p>\u65f6\u949f\u8bbe\u5907\u53ef\u4ee5\u7f16\u7a0b\u4e3a\u6bcf\u9694\u51e0\u6beb\u79d2\u4ea7\u751f\u4e00\u6b21\u4e2d\u65ad\uff0c\u4e2d\u65ad\u65f6\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4f1a\u88ab\u6682\u505c\uff0c\u8f6c\u800c\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u9884\u5148\u914d\u7f6e\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff08interrupt handler\uff09\uff0c\u8fd9\u6837\u64cd\u4f5c\u7cfb\u7edf\u5c31\u91cd\u65b0\u83b7\u5f97\u4e86 CPU \u7684\u63a7\u5236\u6743\u3002</p>"},{"location":"cs/os/ostep/06direct_execution.html#_3","title":"\u4fdd\u5b58\u548c\u6062\u590d\u4e0a\u4e0b\u6587","text":"<p>\u65e2\u7136\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u91cd\u65b0\u83b7\u5f97\u4e86\u63a7\u5236\u6743\uff0c\u65e0\u8bba\u662f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u534f\u4f5c\uff0c\u8fd8\u662f\u901a\u8fc7\u65f6\u949f\u4e2d\u65ad\u66f4\u5f3a\u5236\u6267\u884c\uff0c\u90fd\u5fc5\u987b\u51b3\u5b9a\uff1a\u662f\u7ee7\u7eed\u8fd0\u884c\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u8fd8\u662f\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u3002\u8fd9\u4e2a\u51b3\u5b9a\u662f\u7531\u8c03\u5ea6\u7a0b\u5e8f\uff08scheduler\uff09\u505a\u51fa\u7684\uff0c\u5b83\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002</p> <p>\u5982\u679c\u51b3\u5b9a\u8fdb\u884c\u5207\u6362\uff0cOS \u5c31\u4f1a\u6267\u884c\u4e00\u4e9b\u5e95\u5c42\u4ee3\u7801\uff0c\u5373\u6240\u8c13\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff08context switch\uff09\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u5728\u6982\u5ff5\u4e0a\u5f88\u7b80\u5355\uff1a\u64cd\u4f5c\u7cfb\u7edf\u8981\u505a\u7684\u5c31\u662f\u4e3a\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u4fdd\u5b58\u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\uff08\u4f8b\u5982\uff0c\u5230\u5b83\u7684\u5185\u6838\u6808\uff09\uff0c\u5e76\u4e3a\u5373\u5c06\u6267\u884c\u7684\u8fdb\u7a0b\u6062\u590d\u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\uff08\u4ece\u5b83\u7684\u5185\u6838\u6808\uff09\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u786e\u4fdd\u6700\u540e\u6267\u884c\u4ece\u9677\u9631\u8fd4\u56de\u6307\u4ee4\u65f6\uff0c\u4e0d\u662f\u8fd4\u56de\u5230\u4e4b\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u800c\u662f\u7ee7\u7eed\u6267\u884c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u3002</p> \u64cd\u4f5c\u7cfb\u7edf@\u542f\u52a8\uff08\u5185\u6838\u6a21\u5f0f\uff09 \u786c\u4ef6 \u521d\u59cb\u5316\u9677\u9631\u8868 \u8bb0\u4f4f\u4ee5\u4e0b\u5730\u5740\uff1a\u00a0\u00a0\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u00a0\u00a0\u65f6\u949f\u5904\u7406\u7a0b\u5e8f \u542f\u52a8\u4e2d\u65ad\u65f6\u949f \u542f\u52a8\u65f6\u949f\u6bcf\u9694 x ms \u4e2d\u65ad CPU \u64cd\u4f5c\u7cfb\u7edf@\u8fd0\u884c\uff08\u5185\u6838\u6a21\u5f0f\uff09 \u786c\u4ef6 \u7a0b\u5e8f\uff08\u5e94\u7528\u6a21\u5f0f\uff09 \u8fdb\u7a0b A\u2026\u2026 \u65f6\u949f\u4e2d\u65ad\u5c06\u5bc4\u5b58\u5668\uff08A\uff09\u4fdd\u5b58\u5230\u5185\u6838\u6808\uff08A\uff09\u8f6c\u5411\u5185\u6838\u6a21\u5f0f\u8df3\u5230\u9677\u9631\u5904\u7406\u7a0b\u5e8f \u5904\u7406\u9677\u9631\u8c03\u7528 <code>switch()</code> \u4f8b\u7a0b\u00a0\u00a0\u5c06\u5bc4\u5b58\u5668\uff08A\uff09\u4fdd\u5b58\u5230\u8fdb\u7a0b\u7ed3\u6784\uff08A\uff09\u00a0\u00a0\u5c06\u8fdb\u7a0b\u7ed3\u6784\uff08B\uff09\u6062\u590d\u5230\u5bc4\u5b58\u5668\uff08B\uff09\u4ece\u9677\u9631\u8fd4\u56de\uff08\u8fdb\u5165 B\uff09 \u4ece\u5185\u6838\u6808\uff08B\uff09\u6062\u590d\u5bc4\u5b58\u5668\uff08B\uff09\u8f6c\u5411\u7528\u6237\u6a21\u5f0f\u8df3\u5230 B \u7684\u7a0b\u5e8f\u8ba1\u6570\u5668 \u8fdb\u7a0b B\u2026\u2026"},{"location":"cs/os/ostep/06direct_execution.html#_4","title":"\u5bf9\u8fdb\u7a0b\u8c03\u5ea6\u65b9\u5f0f\u7684\u603b\u7ed3","text":"<p>\u7b2c\u56db\u7ae0\u4f5c\u4e1a\u4e2d\u7684 <code>process-run.py</code> \u5b9e\u73b0\u4e86\u4e00\u4e2a\u534f\u4f5c\u5f0f\u7684\u8fdb\u7a0b\u8c03\u5ea6\u6846\u67b6\uff0c\u8fdb\u7a0b\u5728\u6267\u884c\u4e00\u5b9a\u6570\u91cf\u7684\u6307\u4ee4\u540e\u4e3b\u52a8\u8ba9\u51fa CPU \uff0c\u6216\u8005\u5728\u53d1\u8d77 I/O \u64cd\u4f5c\u540e\u7b49\u5f85 I/O \u5b8c\u6210\u3002</p> <p>\u534f\u4f5c\u5f0f\u8c03\u5ea6\u7684\u7279\u70b9\u662f\u8fdb\u7a0b\u81ea\u613f\u5730\u8ba9\u51fa CPU \u63a7\u5236\u6743\uff0c\u5728\u7b80\u5355\u6613\u7528\u7684\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u5d29\u6e83\u6216\u9677\u5165\u65e0\u9650\u5faa\u73af\u53ef\u80fd\u4f1a\u5f71\u54cd\u6574\u4e2a\u7cfb\u7edf</li> <li>\u4e0d\u9002\u5408\u5904\u7406\u5b9e\u65f6\u4ea4\u4e92\u7684\u4efb\u52a1</li> </ul> <p>\u4e8e\u662f\u5c31\u884d\u751f\u51fa\u4e86 \u62a2\u5360\u5f0f\u8c03\u5ea6 \uff0c\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\u4e00\u6bb5\u65f6\u95f4\uff0c\u7136\u540e\u8fd0\u884c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5982\u6b64\u8f6e\u6362\u3002</p> <p>\u5b9e\u73b0\u8d77\u6765\u4f1a\u66f4\u52a0\u590d\u6742\uff0c\u4f46\u62e5\u6709\u4e86\u66f4\u5f3a\u7684\u7cfb\u7edf\u7a33\u5b9a\u6027\uff0c\u66f4\u9002\u5408\u5904\u7406\u5b9e\u65f6\u4efb\u52a1\u3002</p> <p>\u5f15\u7528 rCore-Tutorial-Book \u5206\u65f6\u591a\u4efb\u52a1\u7cfb\u7edf\u7684\u80cc\u666f \u7684\u4ecb\u7ecd\uff1a</p> <p>\u4ece\u73b0\u5728\u7684\u773c\u5149\u6765\u770b\uff0c\u5f53\u65f6\u7684\u5e94\u7528\u66f4\u591a\u662f\u4e00\u79cd \u540e\u53f0\u5e94\u7528 (Background Application) \uff0c\u5728\u5c06\u5b83\u52a0\u5165\u6267\u884c\u961f\u5217\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u5b9a\u671f\u786e\u8ba4\u5b83\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u800c\u968f\u7740\u6280\u672f\u7684\u53d1\u5c55\uff0c\u6d8c\u73b0\u4e86\u8d8a\u6765\u8d8a\u591a\u7684 \u4ea4\u4e92\u5f0f\u5e94\u7528 (Interactive Application) \uff0c\u5b83\u4eec\u8981\u8fbe\u6210\u7684\u4e00\u4e2a\u91cd\u8981\u76ee\u6807\u5c31\u662f\u63d0\u9ad8\u7528\u6237\uff08\u5e94\u7528\u7684\u4f7f\u7528\u8005\u548c\u5f00\u53d1\u8005\uff09\u64cd\u4f5c\u7684\u54cd\u5e94\u901f\u5ea6\uff0c\u51cf\u5c11 \u5ef6\u8fdf \uff08Latency\uff09\uff0c\u8fd9\u6837\u624d\u80fd\u4f18\u5316\u5e94\u7528\u7684\u4f7f\u7528\u4f53\u9a8c\u548c\u5f00\u53d1\u4f53\u9a8c\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u4e9b\u5e94\u7528\u800c\u8a00\uff0c\u5373\u4f7f\u9700\u8981\u7b49\u5f85\u5916\u8bbe\u6216\u67d0\u4e9b\u4e8b\u4ef6\uff0c\u5b83\u4eec\u4e5f\u4e0d\u4f1a\u503e\u5411\u4e8e\u4e3b\u52a8 yield \u4ea4\u51fa CPU \u4f7f\u7528\u6743\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u80fd\u4f1a\u5e26\u6765\u65e0\u6cd5\u63a5\u53d7\u7684\u5ef6\u8fdf\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5e94\u7528\u4e4b\u95f4\u66f4\u591a\u7684\u662f\u4e92\u76f8\u7ade\u4e89\u5b9d\u8d35\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u76f8\u4e92\u5408\u4f5c\u3002</p> <p>\u5982\u679c\u5e94\u7528\u81ea\u5df1\u5f88\u5c11 yield \uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5c31\u8981\u5f00\u59cb\u6536\u56de\u4e4b\u524d\u4e0b\u653e\u7684\u6743\u529b\uff0c\u7531\u5b83\u81ea\u5df1\u5bf9 CPU \u8d44\u6e90\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u5e76\u5408\u7406\u5206\u914d\u7ed9\u5404\u5e94\u7528\uff0c\u8fd9\u5c31\u662f\u5185\u6838\u9700\u8981\u63d0\u4f9b\u7684\u4efb\u52a1\u8c03\u5ea6\u80fd\u529b\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u9053\u7a0b\u5e8f\u7684\u8c03\u5ea6\u673a\u5236\u5206\u7c7b\u6210</p> <ul> <li>\u534f\u4f5c\u5f0f\u8c03\u5ea6 (Cooperative Scheduling) \uff0c\u56e0\u4e3a\u5b83\u7684\u7279\u5f81\u662f\uff1a\u53ea\u8981\u4e00\u4e2a\u5e94\u7528\u4e0d\u4e3b\u52a8 yield \u4ea4\u51fa CPU \u4f7f\u7528\u6743\uff0c\u5b83\u5c31\u4f1a\u4e00\u76f4\u6267\u884c\u4e0b\u53bb\u3002</li> <li>\u4e0e\u4e4b\u76f8\u5bf9\uff0c \u62a2\u5360\u5f0f\u8c03\u5ea6 (Preemptive Scheduling) \u5219\u662f\u5e94\u7528 \u968f\u65f6 \u90fd\u6709\u88ab\u5185\u6838\u5207\u6362\u51fa\u53bb\u7684\u53ef\u80fd\u3002</li> </ul>"},{"location":"cs/os/ostep/06direct_execution.html#_5","title":"\u4f5c\u4e1a","text":"<pre><code>#define _GNU_SOURCE\n#include &lt;assert.h&gt;\n#include &lt;sched.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/time.h&gt;\n#include &lt;unistd.h&gt;\n\n#define ITERATIONS 1000000.0\n\nint main(void) {\n    // system call\n    struct timeval time_before, time_after;\n\n    gettimeofday(&amp;time_before, NULL);\n    for (size_t i = 0; i &lt; ITERATIONS; i++) {\n        getpid();\n    }\n    gettimeofday(&amp;time_after, NULL);\n\n    double elapsed_time = (1000000 * time_after.tv_sec + time_after.tv_usec) -\n                          (1000000 * time_before.tv_sec + time_before.tv_usec);\n    printf(\"the average time of system call: %.2f us\\n\",\n           elapsed_time / ITERATIONS * 1000);\n\n    // context switch\n    int first_pipe[2];\n    int second_pipe[2];\n    cpu_set_t cpu_set;\n    CPU_ZERO(&amp;cpu_set);\n    CPU_SET(0, &amp;cpu_set);\n\n    assert(pipe(first_pipe) == 0);\n    assert(pipe(second_pipe) == 0);\n\n    pid_t pid = fork();\n    assert(pid &gt;= 0);\n\n    if (pid == 0) {\n        sched_setaffinity(getpid(), sizeof(cpu_set_t), &amp;cpu_set);\n\n        for (size_t i = 0; i &lt; ITERATIONS; i++) {\n            write(first_pipe[0], NULL, 0);\n            read(second_pipe[1], NULL, 0);\n        }\n    } else {\n        sched_setaffinity(getpid(), sizeof(cpu_set_t), &amp;cpu_set);\n\n        gettimeofday(&amp;time_before, NULL);\n        for (size_t i = 0; i &lt; ITERATIONS; i++) {\n            write(second_pipe[0], NULL, 0);\n            read(first_pipe[1], NULL, 0);\n        }\n        gettimeofday(&amp;time_after, NULL);\n\n        double elapsed_time =\n            (1000000 * time_after.tv_sec + time_after.tv_usec) -\n            (1000000 * time_before.tv_sec + time_before.tv_usec);\n        printf(\"the average time of context switch: %.2f us\\n\",\n               elapsed_time / ITERATIONS * 1000);\n    }\n\n    return 0;\n}\n</code></pre> gcc test.c -o test -Wall -Wextra &amp;&amp; ./test<pre><code>the average time of system call: 128.36 us\nthe average time of context switch: 520.91 us\n</code></pre> <p>\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6570\u636e\u5bf9\u4e0d\u5bf9\uff0cGPT \u8bf4\u4e0a\u4e0b\u6587\u5207\u6362\u57fa\u672c\u5728\u7eb3\u79d2\u7ea7\uff0c\u53ef\u80fd\u662f\u5bf9\u7684\u5427\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html","title":"\u7b2c 7 \u7ae0 \u8fdb\u7a0b\u8c03\u5ea6\uff1a\u4ecb\u7ecd","text":"<p>\u4e0a\u4e00\u7ae0\u4ecb\u7ecd\u4e86\u8fdb\u7a0b\u8c03\u5ea6\u7684\u5e95\u5c42\u673a\u5236\uff08mechanism\uff09\uff08\u4e0a\u4e0b\u6587\u5207\u6362\uff09\uff0c\u8fd9\u7ae0\u4ecb\u7ecd\u7684\u662f\u4e0a\u5c42\u7b56\u7565\uff08policy\uff09\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#71","title":"7.1 \u5de5\u4f5c\u8d1f\u8f7d\u5047\u8bbe","text":"<p>\u53ef\u80fd\u662f\u7ffb\u8bd1\u95ee\u9898\uff0c\u5bf9\u7167\u7740\u539f\u6587\u6211\u624d\u8bfb\u660e\u767d\u662f\u4ec0\u4e48\u610f\u601d\u3002</p> <p>let us first make a number of simplifying assumptions about the processes running in the system, sometimes collectively called the workload.</p> <p>\u53ef\u4ee5\u7ffb\u8bd1\u4e3a\uff1a</p> <p>\u9996\u5148\u5bf9 \u8fd0\u884c\u5728\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u8fdb\u7a0b \u8fdb\u884c\u4e00\u7cfb\u5217\u7b80\u5316\u5047\u8bbe\uff0c\u6709\u65f6\u7edf\u79f0\u5b83\u4eec\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u3002</p> <p>\u8fd9\u4e2a\u201c\u5b83\u4eec\u201d\uff0c\u6211\u7406\u89e3\u4e3a\u6307\u7684\u662f\u201c\u8fd0\u884c\u5728\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u8fdb\u7a0b\u201d\uff0c\u56e0\u4e3a about the processes running in the system \u5728\u53e5\u672b\u3002</p> <p>\u63a2\u8ba8\u8c03\u5ea6\u7b56\u7565\u9700\u8981\u5148\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\uff08\u4e00\u7ec4\u8fdb\u7a0b\uff09\u505a\u4e00\u4e9b\u5047\u8bbe\uff1a</p> <ol> <li>\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u8fd0\u884c\u76f8\u540c\u7684\u65f6\u95f4\u3002</li> <li>\u6240\u6709\u7684\u5de5\u4f5c\u540c\u65f6\u5230\u8fbe\u3002</li> <li>\u4e00\u65e6\u5f00\u59cb\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u4fdd\u6301\u8fd0\u884c\u76f4\u5230\u5b8c\u6210\u3002</li> <li>\u6240\u6709\u7684\u5de5\u4f5c\u53ea\u662f\u7528 CPU\uff08\u5373\u5b83\u4eec\u4e0d\u6267\u884c IO \u64cd\u4f5c\uff09\u3002</li> <li>\u6bcf\u4e2a\u5de5\u4f5c\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5df2\u77e5\u7684\u3002</li> </ol> <p>\u8fd9\u4e9b\u5047\u8bbe\u90fd\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u63a5\u4e0b\u6765\u51e0\u4e2a\u5c0f\u8282\u4f1a\u9010\u6b65\u653e\u5bbd\u5b83\u4eec\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#72","title":"7.2 \u8c03\u5ea6\u6307\u6807","text":"<p>\u4e3a\u4e86\u6bd4\u8f83\u8c03\u5ea6\u7b56\u7565\uff0c\u9700\u8981\u5b9a\u4e49\u8c03\u5ea6\u6307\u6807\uff0c\u76ee\u524d\u53ea\u7528\u4e00\u4e2a\uff1a\u5468\u8f6c\u65f6\u95f4\uff08turnaround time\uff09\u3002</p> \\[ T_{\\text{turnaround}} = T_{\\text{completion}} - T_{\\text{arrival}} \\] <p>\u56e0\u4e3a\u5047\u8bbe\u4e86\u6240\u6709\u4efb\u52a1\u540c\u4e00\u65f6\u95f4\u5230\u8fbe\uff0c\u6240\u4ee5 $ T_{\\text{arrival}} = 0 $ \uff0c\u56e0\u6b64 $ T_{\\text{turnaround}} = T_{\\text{completion}} $</p> <p>\u5468\u8f6c\u65f6\u95f4\u662f\u4e00\u4e2a\u6027\u80fd\uff08performance\uff09\u6307\u6807\uff0c\u8fd9\u5c06\u662f\u672c\u7ae0\u7684\u9996\u8981\u5173\u6ce8\u70b9\u3002\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u6307\u6807\u662f\u516c\u5e73\uff08fairness\uff09\uff0c\u6027\u80fd\u548c\u516c\u5e73\u5728\u8c03\u5ea6\u7cfb\u7edf\u4e2d\u5f80\u5f80\u662f\u77db\u76fe\u7684\u3002\u4f8b\u5982\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u4ee5\u4f18\u5316\u6027\u80fd\uff0c\u4f46\u4ee3\u4ef7\u662f\u4ee5\u963b\u6b62\u4e00\u4e9b\u4efb\u52a1\u8fd0\u884c\uff0c\u8fd9\u5c31\u964d\u4f4e\u4e86\u516c\u5e73\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#73-fifo","title":"7.3 \u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09","text":"<p>\u5148\u8fdb\u5148\u51fa\uff08First In First Out\uff0cFIFO\uff09</p> <p>\u5047\u8bbe\u4efb\u52a1 A \u5728 10s \u65f6\u5b8c\u6210\uff0cB \u5728 20s \u65f6\u5b8c\u6210\uff0cC \u5728 30s \u65f6\u5b8c\u6210\uff0c\u56e0\u6b64\u8fd9 3 \u4e2a\u4efb\u52a1\u7684\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u662f 20s \uff1a</p> \\[ \\bar{T_{\\text{turnaround}}} = \\frac{10 + 20 + 30}{3} = 20 \\text{s} \\] <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title FIFO \u7684\u7b80\u5355\u4f8b\u5b50\n    dateFormat s\n    axisFormat %S\n    tickInterval 10second\n\n    A   : 0,    10s\n    B   :       10s\n    C   :       10s</code></pre> <p>\u4f46\u5f53\u4efb\u52a1\u65f6\u95f4\u4e0d\u540c\u65f6\uff0c\u6bd4\u5982 A \u9700\u8981\u5148\u8fd0\u884c 100s \uff0cB \u6216 C \u624d\u6709\u673a\u4f1a\u8fd0\u884c\uff0c\u8fd9\u6837\u65f6\u5019\u7cfb\u7edf\u7684\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u5c31\u53d8\u6210\u4e86 110s \uff1a</p> \\[ \\bar{T_{\\text{turnaround}}} = \\frac{100 + 110 + 120}{3} = 110 \\text{s} \\] <pre><code>gantt\n    title \u4e3a\u4ec0\u4e48 FIFO \u6ca1\u6709\u90a3\u4e48\u597d\n    dateFormat s\n    axisFormat %M:%S\n    tickInterval 10second\n\n    A   : 0,    100s\n    B   :       10s\n    C   :       10s</code></pre> <p>\u8fd9\u4e2a\u95ee\u9898\u901a\u5e38\u88ab\u79f0\u4e3a\u62a4\u822a\u6548\u5e94\uff08convoy effect\uff09\uff0c\u4e00\u4e9b\u8017\u65f6\u8f83\u5c11\u7684\u6f5c\u5728\u8d44\u6e90\u6d88\u8d39\u8005\u88ab\u6392\u5728\u91cd\u91cf\u7ea7\u7684\u8d44\u6e90\u6d88\u8d39\u8005\u4e4b\u540e\u3002 \u8fd9\u4e2a\u8c03\u5ea6\u65b9\u6848\u53ef\u80fd\u8ba9\u4f60\u60f3\u8d77\u5728\u6742\u8d27\u5e97\u53ea\u6709\u4e00\u4e2a\u6392\u961f\u961f\u4f0d\u7684\u65f6\u5019\uff0c\u5982\u679c\u770b\u5230\u524d\u9762\u7684\u4eba\u88c5\u6ee1 3 \u8f86\u8d2d\u7269\u8f66\u98df\u54c1\u5e76\u4e14\u638f\u51fa\u4e86\u652f\u7968\u672c\uff0c\u4f60\u611f\u89c9\u5982\u4f55\uff1f\u8fd9\u4f1a\u7b49\u5f88\u957f\u65f6\u95f4\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#74-sjf","title":"7.4 \u6700\u77ed\u4efb\u52a1\u4f18\u5148\uff08SJF\uff09","text":"<p>\u6700\u77ed\u4efb\u52a1\u4f18\u5148\uff08Shortest Job First\uff0cSJF\uff09</p> <pre><code>gantt\n    title SJF \u7684\u7b80\u5355\u4f8b\u5b50\n    dateFormat s\n    axisFormat %M:%S\n    tickInterval 10second\n\n    B   : 0,    10s\n    C   :       10s\n    A   :       100s</code></pre> \\[ \\bar{T_{\\text{turnaround}}} = \\frac{10 + 20 + 120}{3} = 50 \\text{s} \\] <p>\u5982\u679c\u6240\u6709\u5de5\u4f5c\u540c\u65f6\u5230\u8fbe\uff0cSJF \u5c31\u662f\u4e00\u4e2a\u6700\u4f18\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4f46\u8fd9\u5e76\u4e0d\u73b0\u5b9e\uff0c\u5de5\u4f5c\u5f80\u5f80\u90fd\u662f\u968f\u65f6\u5230\u8fbe\u7684\uff0c\u6bd4\u5982 B \u548c C \u665a\u5230\u4e86 10s \uff1a</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title B \u548c C \u665a\u5230\u65f6\u7684 SJF\n    dateFormat mm:ss\n    axisFormat %M:%S\n    tickInterval 10second\n\n    A Running   : active,   00:00,  100s\n    B Waiting   : done,     00:10,  90s\n    B Running   : active,   01:40,  10s\n    C Waiting   : done,     00:10,  100s\n    C Running   : active,   01:50,  10s</code></pre> <p>\u8fd9\u53c8\u4f1a\u906d\u9047\u62a4\u822a\u95ee\u9898\uff0c\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u53d8\u6210\u4e86 \\(\\frac{100 + (100 - 10) + (120 -10)}{3} \\approx 103.33s\\)</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#75-stcf","title":"7.5 \u6700\u77ed\u5b8c\u6210\u65f6\u95f4\u4f18\u5148\uff08STCF\uff09","text":"<p>\u6700\u77ed\u5b8c\u6210\u65f6\u95f4\u4f18\u5148\uff08Shortest Time-to-Completion First\uff0cSTCF\uff09\u6216\u62a2\u5360\u5f0f\u6700\u77ed\u4f5c\u4e1a\u4f18\u5148\uff08Preemptive Shortest Job First \uff0cPSJF\uff09</p> <p>\u5b83\u57fa\u672c\u7b49\u4e8e\u5411 SJF \u6dfb\u52a0\u62a2\u5360\uff0c\u6bcf\u5f53\u65b0\u5de5\u4f5c\u8fdb\u5165\u7cfb\u7edf\u65f6\uff0c\u5b83\u5c31\u4f1a\u786e\u5b9a\u5269\u4f59\u5de5\u4f5c\u548c\u65b0\u5de5\u4f5c\u4e2d\uff0c\u8c01\u7684\u5269\u4f59\u65f6\u95f4\u6700\u5c11\uff0c\u7136\u540e\u8c03\u5ea6\u8be5\u5de5\u4f5c\u3002</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title STCF \u7684\u7b80\u5355\u4f8b\u5b50\n    dateFormat s\n    axisFormat %M:%S\n    tickInterval 10second\n\n    A Running   : active,   0,  10s\n    A Pausing   : done,     10, 20s\n    A Running   : active,   30, 110s\n    B Running   : active,   10, 10s\n    C Waiting   : done,     10, 10s\n    C Running   : active,   20, 10s</code></pre> <p>STCF \u5c06\u62a2\u5360 A \u5e76\u8fd0\u884c B \u548c C \u4ee5\u5b8c\u6210\uff0c\u53ea\u6709\u5728\u5b83\u4eec\u5b8c\u6210\u540e\uff0c\u624d\u80fd\u8c03\u5ea6 A \u7684\u5269\u4f59\u65f6\u95f4\u3002</p> \\[ \\bar{T_{\\text{turnaround}}} = \\frac{120 + 10 + 20}{3} = 50 \\text{s} \\] <p>\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\u5927\u5927\u63d0\u9ad8\uff0c\u4ee5\u524d\u4e00\u6837\u3002</p> <p>STCF \u662f\u62a2\u5360\u5f0f\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u800c SJF \u662f\u975e\u62a2\u5360\u5f0f\u7684\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#76","title":"7.6 \u65b0\u5ea6\u91cf\u6307\u6807\uff1a\u54cd\u5e94\u65f6\u95f4","text":"<p>\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u4efb\u52a1\u957f\u5ea6\uff0c\u800c\u4e14\u4efb\u52a1\u53ea\u4f7f\u7528 CPU\uff0c\u800c\u6211\u4eec\u552f\u4e00\u7684\u8861\u91cf\u662f\u5468\u8f6c\u65f6\u95f4\uff0cSTCF \u5c06\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7b56\u7565\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u8bb8\u591a\u65e9\u671f\u6279\u5904\u7406\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u8c03\u5ea6\u7b97\u6cd5\u6709\u4e00\u5b9a\u7684\u610f\u4e49\u3002 \u7136\u800c\uff0c\u5f15\u5165\u5206\u65f6\u7cfb\u7edf\u6539\u53d8\u4e86\u8fd9\u4e00\u5207\u3002\u73b0\u5728\uff0c\u7528\u6237\u5c06\u4f1a\u5750\u5728\u7ec8\u7aef\u524d\u9762\uff0c\u540c\u65f6\u4e5f\u8981\u6c42\u7cfb\u7edf\u7684\u4ea4\u4e92\u6027\u597d\u3002 \u56e0\u6b64\uff0c\u4e00\u4e2a\u65b0\u7684\u5ea6\u91cf\u6807\u51c6\u8bde\u751f\u4e86\uff1a\u54cd\u5e94\u65f6\u95f4\uff08response time\uff09</p> \\[ T_{\\text{response}} = T_{\\text{firstrun}} - T_{\\text{arrival}} \\] <p>\u4e0a\u5c0f\u8282\u793a\u4f8b\u4e2d\uff0cA \u5728 0s \u5230\u8fbe\uff0cB \u548c C \u5728 10s \u5230\u8fbe\uff0c\u4f5c\u4e1a\u7684\u54cd\u5e94\u65f6\u95f4\u5982\u4e0b\uff1a</p> \\[ \\begin{align}     T_{\\text{A response}} &amp;= 0s \\\\     T_{\\text{B response}} &amp;= 0s \\\\     T_{\\text{B response}} &amp;= 10s \\\\     \\bar{T_{\\text{response}}} &amp;\\approx 3.33s \\end{align} \\] <p>\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u6709\u5f88\u597d\u7684\u5468\u8f6c\u65f6\u95f4\uff0c\u4f46\u5bf9\u4e8e\u54cd\u5e94\u65f6\u95f4\u548c\u4ea4\u4e92\u6027\u662f\u76f8\u5f53\u7cdf\u7cd5\u7684\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#77","title":"7.7 \u8f6e\u8f6c","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u79cd\u65b0\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u901a\u5e38\u88ab\u79f0\u4e3a\u8f6e\u8f6c\uff08Round-Robin\uff0cRR\uff09\u8c03\u5ea6\u3002</p> <p>\u57fa\u672c\u601d\u60f3\u5f88\u7b80\u5355\uff1aRR \u5728\u4e00\u4e2a\u65f6\u95f4\u7247\uff08time slice\uff0c\u6709\u65f6\u79f0\u4e3a\u8c03\u5ea6\u91cf\u5b50\uff0cscheduling quantum\uff09\u5185\u8fd0\u884c\u4e00\u4e2a\u5de5\u4f5c\uff0c\u7136\u540e\u5207\u6362\u5230\u8fd0\u884c\u961f\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u4e00\u4e2a\u4efb\u52a1\u76f4\u5230\u7ed3\u675f\u3002\u5b83\u53cd\u590d\u6267\u884c\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u3002 \u56e0\u6b64\uff0cRR \u6709\u65f6\u88ab\u79f0\u4e3a\u65f6\u95f4\u5207\u7247\uff08time-slicing\uff09\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u65f6\u95f4\u7247\u957f\u5ea6\u5fc5\u987b\u662f\u65f6\u949f\u4e2d\u65ad\u5468\u671f\u7684\u500d\u6570\u3002\u56e0\u6b64\uff0c\u5982\u679c\u65f6\u949f\u4e2d\u65ad\u662f\u6bcf 10ms \u4e2d\u65ad\u4e00\u6b21\uff0c\u5219\u65f6\u95f4\u7247\u53ef\u4ee5\u662f 10ms\u300120ms \u6216 10ms \u7684\u4efb\u4f55\u5176\u4ed6\u500d\u6570\u3002</p> <pre><code>gantt\n    title \u53c8\u662f SJF\uff08\u54cd\u5e94\u65f6\u95f4\u4e0d\u597d\uff09\n    dateFormat s\n    axisFormat %S\n    tickInterval 5second\n\n    A   :   0,  5s\n    B   :       5s\n    C   :       5s</code></pre> \\[ \\bar{T_{\\text{SJF response}}} = \\frac{0 + 5 + 10}{3} = 5s \\] <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u8f6e\u8f6c\uff08\u54cd\u5e94\u65f6\u95f4\u597d\uff09\n    dateFormat s\n    axisFormat %S\n    tickInterval 1second\n\n    section A\n        A   :   0,  1s\n        A   :   3,  1s\n        A   :   6,  1s\n        A   :   9,  1s\n        A   :   12, 1s\n\n    section B\n        B   :   1,  1s\n        B   :   4,  1s\n        B   :   7,  1s\n        B   :   10, 1s\n        B   :   13, 1s\n\n    section C\n        C   :   2,  1s\n        C   :   5,  1s\n        C   :   8,  1s\n        C   :   11,  1s\n        C   :   14,  1s</code></pre> \\[ \\bar{T_{\\text{RR response}}} = \\frac{0 + 1 + 2}{3} = 1s \\] <p>\u65f6\u95f4\u7247\u957f\u5ea6\u5bf9\u4e8e RR \u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u8d8a\u77ed\uff0cRR \u5728\u54cd\u5e94\u65f6\u95f4\u4e0a\u8868\u73b0\u8d8a\u597d\uff0c\u4f46\u592a\u77ed\u7684\u8bdd\u4f1a\u4f7f\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6210\u672c\u8fc7\u9ad8\u3002</p> <p>\u7cfb\u7edf\u8bbe\u8ba1\u8005\u9700\u8981\u6743\u8861\u65f6\u95f4\u7247\u7684\u957f\u5ea6\uff0c\u4f7f\u5176\u8db3\u591f\u957f\uff0c\u4ee5\u4fbf\u644a\u9500\uff08amortize\uff09\u4e0a\u4e0b\u6587\u5207\u6362\u6210\u672c\uff0c\u800c\u53c8\u4e0d\u4f1a\u4f7f\u7cfb\u7edf\u4e0d\u53ca\u65f6\u54cd\u5e94</p> <p>\u63d0\u793a\uff1a\u644a\u9500\u53ef\u4ee5\u51cf\u5c11\u6210\u672c</p> <p>\u5f53\u7cfb\u7edf\u67d0\u4e9b\u64cd\u4f5c\u6709\u56fa\u5b9a\u6210\u672c\u65f6\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u644a\u9500\u6280\u672f\uff08amortization\uff09\u3002\u901a\u8fc7\u51cf\u5c11\u6210\u672c\u7684\u9891\u5ea6\uff08\u5373\u6267\u884c\u8f83\u5c11\u6b21\u7684\u64cd\u4f5c\uff09\uff0c\u7cfb\u7edf\u7684\u603b\u6210\u672c\u5c31\u4f1a\u964d\u4f4e\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u65f6\u95f4\u7247\u8bbe\u7f6e\u4e3a 10ms \uff0c\u5e76\u4e14\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u95f4\u4e3a 1ms \uff0c\u90a3\u4e48\u6d6a\u8d39\u5927\u7ea6 10% \u7684\u65f6\u95f4\u7528\u4e8e\u4e0a\u4e0b\u6587\u5207\u6362\u3002 \u5982\u679c\u8981\u644a\u9500\u8fd9\u4e2a\u6210\u672c\uff0c\u53ef\u4ee5\u628a\u65f6\u95f4\u7247\u589e\u52a0\u5230 100ms \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5230 1% \u7684\u65f6\u95f4\u7528\u4e8e\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u56e0\u6b64\u65f6\u95f4\u7247\u5e26\u6765\u7684\u6210\u672c\u5c31\u88ab\u644a\u9500\u4e86</p> <p>\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6210\u672c\u4e0d\u4ec5\u4ec5\u6765\u81ea\u4fdd\u5b58\u548c\u6062\u590d\u5c11\u91cf\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u64cd\u4f5c</p> <p>\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u5b83\u4eec\u5728 CPU \u9ad8\u901f\u7f13\u5b58\u3001TLB\u3001\u5206\u652f\u9884\u6d4b\u5668\u548c\u5176\u4ed6\u7247\u4e0a\u786c\u4ef6\u4e2d\u5efa\u7acb\u4e86\u5927\u91cf\u7684\u72b6\u6001\u3002 \u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5de5\u4f5c\u4f1a\u5bfc\u81f4\u6b64\u72b6\u6001\u88ab\u5237\u65b0\uff0c\u4e14\u4e0e\u5f53\u524d\u8fd0\u884c\u7684\u4f5c\u4e1a\u76f8\u5173\u7684\u65b0\u72b6\u6001\u88ab\u5f15\u5165\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u663e\u8457\u7684\u6027\u80fd\u6210\u672c</p> <p>\u56de\u5934\u770b\u770b\u8001\u670b\u53cb\u5468\u8f6c\u65f6\u95f4\uff1a\\(\\bar{T_{\\text{RR turnaround}}} = \\frac{13 + 14 + 15}{3} = 14s\\) \uff0c\u76f8\u5f53\u53ef\u6015\u3002</p> <p>\u8fd9\u5e76\u4e0d\u5947\u602a\uff0c\u5982\u679c\u5468\u8f6c\u65f6\u95f4\u662f\u6211\u4eec\u7684\u6307\u6807\uff0c\u90a3\u4e48 RR \u786e\u5b9e\u662f\u6700\u7cdf\u7cd5\u7684\u7b56\u7565\u4e4b\u4e00\u3002 \u76f4\u89c2\u5730\u8bf4\uff0c\u8fd9\u5e94\u8be5\u662f\u6709\u610f\u4e49\u7684\uff1aRR \u6240\u505a\u7684\u6b63\u662f\u5ef6\u4f38\u6bcf\u4e2a\u5de5\u4f5c\uff0c\u53ea\u8fd0\u884c\u6bcf\u4e2a\u5de5\u4f5c\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff0c\u5c31\u8f6c\u5411\u4e0b\u4e00\u4e2a\u5de5\u4f5c\u3002 \u56e0\u4e3a\u5468\u8f6c\u65f6\u95f4\u53ea\u5173\u5fc3\u4f5c\u4e1a\u4f55\u65f6\u5b8c\u6210\uff0cRR \u51e0\u4e4e\u662f\u6700\u5dee\u7684\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u751a\u81f3\u6bd4\u7b80\u5355\u7684 FIFO \u66f4\u5dee\u3002</p> <p>\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u4efb\u4f55\u516c\u5e73\uff08fair\uff09\u7684\u653f\u7b56\uff08\u5982 RR\uff09\uff0c\u5373\u5728\u5c0f\u89c4\u6a21\u7684\u65f6\u95f4\u5185\u5c06 CPU \u5747\u5300\u5206\u914d\u5230\u6d3b\u52a8\u8fdb\u7a0b\u4e4b\u95f4\uff0c\u5728\u5468\u8f6c\u65f6\u95f4\u8fd9\u7c7b\u6307\u6807\u4e0a\u8868\u73b0\u4e0d\u4f73\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u56fa\u6709\u7684\u6743\u8861\uff1a\u5982\u679c\u4f60\u613f\u610f\u4e0d\u516c\u5e73\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\u8f83\u77ed\u7684\u5de5\u4f5c\u76f4\u5230\u5b8c\u6210\uff0c\u4f46\u662f\u8981\u4ee5\u54cd\u5e94\u65f6\u95f4\u4e3a\u4ee3\u4ef7\u3002\u5982\u679c\u4f60\u91cd\u89c6\u516c\u5e73\u6027\uff0c\u5219\u54cd\u5e94\u65f6\u95f4\u4f1a\u8f83\u77ed\uff0c\u4f46\u4f1a\u4ee5\u5468\u8f6c\u65f6\u95f4\u4e3a\u4ee3\u4ef7\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#78-io","title":"7.8 \u7ed3\u5408 I/O","text":"<p>\u5047\u8bbe 4\uff1a\u6240\u6709\u7684\u5de5\u4f5c\u53ea\u662f\u7528 CPU\uff08\u5373\u5b83\u4eec\u4e0d\u6267\u884c IO \u64cd\u4f5c\uff09\u3002</p> <p>\u6211\u4eec\u653e\u5bbd\u5b83\uff0c\u5047\u8bbe\u6240\u6709\u7a0b\u5e8f\u4f1a\u6267\u884c I/O \u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6709\u4e24\u9879\u5de5\u4f5c A \u548c B \uff0c\u6bcf\u9879\u5de5\u4f5c\u9700\u8981 50ms \u7684 CPU \u65f6\u95f4\uff0cA \u8fd0\u884c 10ms \u540e\u53d1\u51fa I/O \u8bf7\u6c42\uff0c\u6bcf\u4e2a I/O \u9700\u8981 10ms \uff0c\u800c B \u53ea\u662f\u4f7f\u7528 CPU 50ms \uff0c\u4e0d\u6267\u884c I/O \u3002</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u8d44\u6e90\u7684\u7cdf\u7cd5\u4f7f\u7528\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section CPU\n        A   :   active, 000,  10ms\n        A   :   active, 020,  10ms\n        A   :   active, 040,  10ms\n        A   :   active, 060,  10ms\n        A   :   active, 080,  10ms\n        B   :           100,  50ms\n\n    section \u78c1\u76d8\n        A   :   active, 010,  10ms\n        A   :   active, 030,  10ms\n        A   :   active, 050,  10ms\n        A   :   active, 070,  10ms\n        A   :   active, 090,  10ms</code></pre> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u91cd\u53e0\u53ef\u4ee5\u66f4\u597d\u5730\u4f7f\u7528\u8d44\u6e90\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section CPU\n        A   :   active, 000,  10ms\n        B   :           010,  10ms\n        A   :   active, 020,  10ms\n        B   :           030,  10ms\n        A   :   active, 040,  10ms\n        B   :           050,  10ms\n        A   :   active, 060,  10ms\n        B   :           070,  10ms\n        A   :   active, 080,  10ms\n        B   :           090,  10ms\n\n    section \u78c1\u76d8\n        A   :   active,   010,  10ms\n        A   :   active,   030,  10ms\n        A   :   active,   050,  10ms\n        A   :   active,   070,  10ms\n        A   :   active,   090,  10ms</code></pre> <p>\u63d0\u793a\uff1a\u91cd\u53e0\u53ef\u4ee5\u63d0\u9ad8\u5229\u7528\u7387</p> <p>\u5982\u6709\u53ef\u80fd\uff0c\u91cd\u53e0\uff08overlap\uff09\u64cd\u4f5c\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u7cfb\u7edf\u7684\u5229\u7528\u7387\u3002\u91cd\u53e0\u5728\u8bb8\u591a\u4e0d\u540c\u7684\u9886\u57df\u5f88\u6709\u7528\uff0c\u5305\u62ec\u6267\u884c\u78c1\u76d8 I/O \u6216\u5c06\u6d88\u606f\u53d1\u9001\u5230\u8fdc\u7a0b\u673a\u5668\u65f6\u3002 \u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f00\u59cb\u64cd\u4f5c\u7136\u540e\u5207\u6362\u5230\u5176\u4ed6\u5de5\u4f5c\u90fd\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u8fd9\u4e5f\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u6574\u4f53\u5229\u7528\u7387\u548c\u6548\u7387\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#79","title":"7.9 \u65e0\u6cd5\u9884\u77e5","text":"<p>\u5047\u8bbe 5\uff1a\u6bcf\u4e2a\u5de5\u4f5c\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5df2\u77e5\u7684\u3002</p> <p>\u4f46\u5728\u4e00\u4e2a\u901a\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u6bcf\u4e2a\u4f5c\u4e1a\u7684\u957f\u5ea6\u5176\u5b9e\u662f\u77e5\u4e4b\u751a\u5c11\u7684\uff0c\u5982\u4f55\u5efa\u7acb\u4e00\u4e2a\u6ca1\u6709\u8fd9\u79cd\u5148\u9a8c\u77e5\u8bc6\u7684 SJF/STCF \uff1f</p> <p>\u7b54\u6848\u662f \u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6 \uff0c\u56e0\u4e3a\u6211\u5148\u770b\u4e86 rCore \uff0c\u88ab\u5267\u900f\u4e86\uff0c\u8fd9\u5176\u5b9e\u662f\u4e0b\u4e00\u7ae0\u7684\u5185\u5bb9\u3002</p>"},{"location":"cs/os/ostep/07cpu_scheduling.html#_1","title":"\u4f5c\u4e1a","text":"<p>Question</p> <p>1\uff0e\u4f7f\u7528 SJF \u548c FIFO \u8c03\u5ea6\u7a0b\u5e8f\u8fd0\u884c\u957f\u5ea6\u4e3a 200 \u7684 3 \u4e2a\u4f5c\u4e1a\u65f6\uff0c\u8ba1\u7b97\u54cd\u5e94\u65f6\u95f4\u548c\u5468\u8f6c\u65f6\u95f4\u3002</p> <p>Answer</p> <p>\\(\\bar{T_{\\text{SJF response}}} \\approx 107.33\\) \\(\\bar{T_{\\text{SJF turnaround}}} \\approx 242.67\\)</p> <p>\\(\\bar{T_{\\text{FIFO response}}} \\approx 163.33\\) \\(\\bar{T_{\\text{FIFO turnaround}}} \\approx 298.67\\)</p> python scheduler.py -p SJF -j 3 -m 200 -c<pre><code>ARG policy SJF\nARG jobs 3\nARG maxlen 200\nARG seed 0\n\nHere is the job list, with the run time of each job:\n  Job 0 ( length = 169 )\n  Job 1 ( length = 152 )\n  Job 2 ( length = 85 )\n\n** Solutions **\n\nExecution trace:\n  [ time   0 ] Run job 2 for 85.00 secs ( DONE at 85.00 )\n  [ time  85 ] Run job 1 for 152.00 secs ( DONE at 237.00 )\n  [ time 237 ] Run job 0 for 169.00 secs ( DONE at 406.00 )\n\nFinal statistics:\n  Job   2 -- Response: 0.00  Turnaround 85.00  Wait 0.00\n  Job   1 -- Response: 85.00  Turnaround 237.00  Wait 85.00\n  Job   0 -- Response: 237.00  Turnaround 406.00  Wait 237.00\n\n  Average -- Response: 107.33  Turnaround 242.67  Wait 107.33\n</code></pre> python scheduler.py -p FIFO -j 3 -m 200 -c<pre><code>ARG policy FIFO\nARG jobs 3\nARG maxlen 200\nARG seed 0\n\nHere is the job list, with the run time of each job:\n  Job 0 ( length = 169 )\n  Job 1 ( length = 152 )\n  Job 2 ( length = 85 )\n\n** Solutions **\n\nExecution trace:\n  [ time   0 ] Run job 0 for 169.00 secs ( DONE at 169.00 )\n  [ time 169 ] Run job 1 for 152.00 secs ( DONE at 321.00 )\n  [ time 321 ] Run job 2 for 85.00 secs ( DONE at 406.00 )\n\nFinal statistics:\n  Job   0 -- Response: 0.00  Turnaround 169.00  Wait 0.00\n  Job   1 -- Response: 169.00  Turnaround 321.00  Wait 169.00\n  Job   2 -- Response: 321.00  Turnaround 406.00  Wait 321.00\n\n  Average -- Response: 163.33  Turnaround 298.67  Wait 163.33\n</code></pre> <p>Question</p> <p>2\uff0e\u73b0\u5728\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u6709\u4e0d\u540c\u957f\u5ea6\u7684\u4f5c\u4e1a\uff0c\u5373 100\u3001200 \u548c 300\u3002</p> <p>Answer</p> <p>\u540c\u4e0a\uff0cSFJ \u7684\u54cd\u5e94\u65f6\u95f4\u548c\u5468\u8f6c\u65f6\u95f4\u90fd\u8981\u6bd4 FIFO \u5c11\u3002</p> <p>Question</p> <p>3\uff0e\u73b0\u5728\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u91c7\u7528 RR \u8c03\u5ea6\u7a0b\u5e8f\uff0c\u65f6\u95f4\u7247\u4e3a 1\u3002</p> <p>Answer</p> <p>\\(\\bar{T_{\\text{RR response}}} = 1\\) \\(\\bar{T_{\\text{RR turnaround}}} = 350\\)</p> python scheduler.py -p RR -j 3 -m 200 -q 1 -c<pre><code>ARG policy RR\nARG jobs 3\nARG maxlen 200\nARG seed 0\n\nHere is the job list, with the run time of each job:\n  Job 0 ( length = 169 )\n  Job 1 ( length = 152 )\n  Job 2 ( length = 85 )\n\n** Solutions **\n\nExecution trace:\n  [ time   0 ] Run job   0 for 1.00 secs\n  [ time   1 ] Run job   1 for 1.00 secs\n  [ time   2 ] Run job   2 for 1.00 secs\n  [ time   3 ] Run job   0 for 1.00 secs\n  ...\n  [ time 402 ] Run job   0 for 1.00 secs\n  [ time 403 ] Run job   0 for 1.00 secs\n  [ time 404 ] Run job   0 for 1.00 secs\n  [ time 405 ] Run job   0 for 1.00 secs ( DONE at 406.00 )\n\nFinal statistics:\n  Job   0 -- Response: 0.00  Turnaround 406.00  Wait 237.00\n  Job   1 -- Response: 1.00  Turnaround 389.00  Wait 237.00\n  Job   2 -- Response: 2.00  Turnaround 255.00  Wait 170.00\n</code></pre> <p>Question</p> <p>4\uff0e\u5bf9\u4e8e\u4ec0\u4e48\u7c7b\u578b\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0cSJF \u63d0\u4f9b\u4e0e FIFO \u76f8\u540c\u7684\u5468\u8f6c\u65f6\u95f4\uff1f</p> <p>Answer</p> <p>\u4efb\u52a1\u540c\u65f6\u5230\u8fbe\uff0c\u5e76\u4e14\u77ed\u4efb\u52a1\u5728\u524d\u3002</p> <p>Question</p> <p>5\uff0e\u5bf9\u4e8e\u4ec0\u4e48\u7c7b\u578b\u7684\u5de5\u4f5c\u8d1f\u8f7d\u548c\u91cf\u5b50\u957f\u5ea6\uff0cSJF \u4e0e RR \u63d0\u4f9b\u76f8\u540c\u7684\u54cd\u5e94\u65f6\u95f4\uff1f</p> <p>Answer</p> <p>\u4efb\u52a1\u957f\u5ea6\u76f8\u540c\u4e14\u7b49\u4e8e\u91cf\u5b50\u957f\u5ea6\u3002</p> python scheduler.py -p SJF -c -l 10,10,10<pre><code>ARG policy SJF\nARG jlist 10,10,10\n\nHere is the job list, with the run time of each job:\n  Job 0 ( length = 10.0 )\n  Job 1 ( length = 10.0 )\n  Job 2 ( length = 10.0 )\n\n** Solutions **\n\nExecution trace:\n  [ time   0 ] Run job 0 for 10.00 secs ( DONE at 10.00 )\n  [ time  10 ] Run job 1 for 10.00 secs ( DONE at 20.00 )\n  [ time  20 ] Run job 2 for 10.00 secs ( DONE at 30.00 )\n\nFinal statistics:\n  Job   0 -- Response: 0.00  Turnaround 10.00  Wait 0.00\n  Job   1 -- Response: 10.00  Turnaround 20.00  Wait 10.00\n  Job   2 -- Response: 20.00  Turnaround 30.00  Wait 20.00\n\n  Average -- Response: 10.00  Turnaround 20.00  Wait 10.00\n</code></pre> python scheduler.py -p RR -q 10 -c -l 10,10,10<pre><code>ARG policy RR\nARG jlist 10,10,10\n\nHere is the job list, with the run time of each job:\n  Job 0 ( length = 10.0 )\n  Job 1 ( length = 10.0 )\n  Job 2 ( length = 10.0 )\n\n** Solutions **\n\nExecution trace:\n  [ time   0 ] Run job   0 for 10.00 secs ( DONE at 10.00 )\n  [ time  10 ] Run job   1 for 10.00 secs ( DONE at 20.00 )\n  [ time  20 ] Run job   2 for 10.00 secs ( DONE at 30.00 )\n\nFinal statistics:\n  Job   0 -- Response: 0.00  Turnaround 10.00  Wait 0.00\n  Job   1 -- Response: 10.00  Turnaround 20.00  Wait 10.00\n  Job   2 -- Response: 20.00  Turnaround 30.00  Wait 20.00\n\n  Average -- Response: 10.00  Turnaround 20.00  Wait 10.00\n</code></pre> <p>Question</p> <p>6\uff0e\u968f\u7740\u5de5\u4f5c\u957f\u5ea6\u7684\u589e\u52a0\uff0cSJF \u7684\u54cd\u5e94\u65f6\u95f4\u4f1a\u600e\u6837\uff1f\u4f60\u80fd\u4f7f\u7528\u6a21\u62df\u7a0b\u5e8f\u6765\u5c55\u793a\u8d8b\u52bf\u5417\uff1f</p> <p>Answer</p> <pre><code>$ python scheduler.py -p SJF -j 3 -m 10 -c\n$ python scheduler.py -p SJF -j 3 -m 100 -c\n$ python scheduler.py -p SJF -j 3 -m 1000 -c\n</code></pre> <p>\\(T_{\\text{SJF response}}\\) \u4f1a\u4e0d\u65ad\u589e\u52a0\u3002</p> <p>Question</p> <p>7\uff0e\u968f\u7740\u91cf\u5b50\u957f\u5ea6\u7684\u589e\u52a0\uff0cRR \u7684\u54cd\u5e94\u65f6\u95f4\u4f1a\u600e\u6837\uff1f\u4f60\u80fd\u5199\u51fa\u4e00\u4e2a\u65b9\u7a0b\uff0c\u8ba1\u7b97\u7ed9\u5b9a N \u4e2a\u5de5\u4f5c\u65f6\uff0c\u6700\u574f\u60c5\u51b5\u7684\u54cd\u5e94\u65f6\u95f4\u5417\uff1f</p> <p>Answer</p> <p>\\(T_{\\text{worst-case response}} = (N - 1) \\times T_{\\text{quantum}}\\)</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html","title":"\u7b2c 8 \u7ae0 \u8c03\u5ea6\uff1a\u591a\u7ea7\u53cd\u9988\u961f\u5217","text":"<p>\u591a\u7ea7\u53cd\u9988\u961f\u5217\uff08Multi-level Feedback Queue\uff0cMLFQ\uff09</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html#81-mlfq","title":"8.1 MLFQ\uff1a\u57fa\u672c\u89c4\u5219","text":"<p>MLFQ \u4e2d\u6709\u8bb8\u591a\u72ec\u7acb\u7684\u961f\u5217\uff08queue\uff09\uff0c\u6bcf\u4e2a\u961f\u5217\u6709\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\uff08priority level\uff09\u3002\u4efb\u4f55\u65f6\u523b\uff0c\u4e00\u4e2a\u5de5\u4f5c\u53ea\u80fd\u5b58\u5728\u4e8e\u4e00\u4e2a\u961f\u5217\u4e2d\u3002MLFQ \u603b\u662f\u4f18\u5148\u6267\u884c\u8f83\u9ad8\u4f18\u5148\u7ea7\u7684\u5de5\u4f5c\uff08\u5373\u5728\u8f83\u9ad8\u7ea7\u961f\u5217\u4e2d\u7684\u5de5\u4f5c\uff09\u3002</p> <p>\u5f53\u7136\uff0c\u6bcf\u4e2a\u961f\u5217\u4e2d\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5de5\u4f5c\uff0c\u56e0\u6b64\u5177\u6709\u540c\u6837\u7684\u4f18\u5148\u7ea7\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u5bf9\u8fd9\u4e9b\u5de5\u4f5c\u91c7\u7528\u8f6e\u8f6c\u8c03\u5ea6\u3002</p> <p>\u56e0\u6b64\uff0cMLFQ \u8c03\u5ea6\u7b56\u7565\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u8bbe\u7f6e\u4f18\u5148\u7ea7\u3002</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u4e0d\u65ad\u653e\u5f03CPU \u53bb\u7b49\u5f85\u952e\u76d8\u8f93\u5165\uff0c\u8fd9\u662f\u4ea4\u4e92\u578b\u8fdb\u7a0b\u7684\u53ef\u80fd\u884c\u4e3a\uff0cMLFQ \u56e0\u6b64\u4f1a\u8ba9\u5b83\u4fdd\u6301\u9ad8\u4f18\u5148\u7ea7\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u957f\u65f6\u95f4\u5730\u5360\u7528 CPU \uff0cMLFQ \u4f1a\u964d\u4f4e\u5176\u4f18\u5148\u7ea7\u3002</li> </ul> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cMLFQ \u5728\u8fdb\u7a0b\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u5176\u884c\u4e3a\uff0c\u4ece\u800c\u5229\u7528\u5de5\u4f5c\u7684\u5386\u53f2\u6765 \u9884\u6d4b \u5b83\u672a\u6765\u7684\u884c\u4e3a\u3002</p> <p>MLFQ \u7684\u4e24\u6761\u57fa\u672c\u89c4\u5219\uff1a</p> <ul> <li>\u89c4\u5219 1\uff1a\u5982\u679c A \u7684\u4f18\u5148\u7ea7 &gt; B \u7684\u4f18\u5148\u7ea7\uff0c\u8fd0\u884c A\uff08\u4e0d\u8fd0\u884c B\uff09\u3002</li> <li>\u89c4\u5219 2\uff1a\u5982\u679c A \u7684\u4f18\u5148\u7ea7 = B \u7684\u4f18\u5148\u7ea7\uff0c\u8f6e\u8f6c\u8fd0\u884c\u3002</li> </ul>"},{"location":"cs/os/ostep/08multi_level_feedback.html#82-1","title":"8.2 \u5c1d\u8bd5 1\uff1a\u5982\u4f55\u6539\u53d8\u4f18\u5148\u7ea7","text":"<ul> <li>\u89c4\u5219 3\uff1a\u5de5\u4f5c\u8fdb\u5165\u7cfb\u7edf\u65f6\uff0c\u653e\u5728\u6700\u9ad8\u4f18\u5148\u7ea7\uff08\u6700\u4e0a\u5c42\u961f\u5217\uff09\u3002</li> <li>\u89c4\u5219 4a\uff1a\u5de5\u4f5c\u7528\u5b8c\u6574\u4e2a\u65f6\u95f4\u7247\u540e\uff0c\u964d\u4f4e\u5176\u4f18\u5148\u7ea7\uff08\u79fb\u5165\u4e0b\u4e00\u4e2a\u961f\u5217\uff09\u3002</li> <li>\u89c4\u5219 4b\uff1a\u5982\u679c\u5de5\u4f5c\u5728\u5176\u65f6\u95f4\u7247\u4ee5\u5185\u4e3b\u52a8\u91ca\u653e CPU \uff0c\u5219\u4f18\u5148\u7ea7\u4e0d\u53d8\u3002</li> </ul>"},{"location":"cs/os/ostep/08multi_level_feedback.html#1","title":"\u5b9e\u4f8b 1\uff1a\u5355\u4e2a\u957f\u5de5\u4f5c","text":"<p>\u8be5\u5de5\u4f5c\u9996\u5148\u8fdb\u5165\u6700\u9ad8\u4f18\u5148\u7ea7\uff08Q2\uff09\u3002\u6267\u884c\u4e00\u4e2a 10ms \u7684\u65f6\u95f4\u7247\u540e\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u5de5\u4f5c\u7684\u4f18\u5148\u7ea7\u51cf 1\uff0c\u56e0\u6b64\u8fdb\u5165 Q1\u3002\u5728 Q1 \u6267\u884c\u4e00\u4e2a\u65f6\u95f4\u7247\u540e\uff0c\u6700\u7ec8\u964d\u4f4e\u4f18\u5148\u7ea7\u8fdb\u5165\u7cfb\u7edf\u7684\u6700\u4f4e\u4f18\u5148\u7ea7\uff08Q0\uff09\uff0c\u4e00\u76f4\u7559\u5728\u90a3\u91cc\u3002</p> <pre><code>gantt\n    title \u957f\u65f6\u95f4\u5de5\u4f5c\u968f\u65f6\u95f4\u7684\u53d8\u6362\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section Q2\n        task:   000,    10ms\n    section Q1\n        task:           10ms\n    section Q0\n        task:           180ms</code></pre>"},{"location":"cs/os/ostep/08multi_level_feedback.html#2","title":"\u5b9e\u4f8b 2\uff1a\u6765\u4e86\u4e00\u4e2a\u77ed\u5de5\u4f5c","text":"<p>A \u662f\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684 CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\uff0cB \u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u95f4\u5f88\u77ed\u7684\u4ea4\u4e92\u578b\u5de5\u4f5c\u3002</p> <p>A \u5728\u6700\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u6267\u884c\uff08\u957f\u65f6\u95f4\u8fd0\u884c\u7684 CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u90fd\u8fd9\u6837\uff09\uff0cB \u5728 100ms \u65f6\u5230\u8fbe\uff0c\u5e76\u88ab\u52a0\u5165\u6700\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u3002\u7531\u4e8e\u5b83\u7684\u8fd0\u884c\u65f6\u95f4\u5f88\u77ed\uff08\u53ea\u6709 20ms\uff09\uff0c\u7ecf\u8fc7\u4e24\u4e2a\u65f6\u95f4\u7247\uff0c\u5728\u88ab\u79fb\u5165\u6700\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e4b\u524d\uff0cB \u6267\u884c\u5b8c\u6bd5\u3002\u7136\u540e A \u7ee7\u7eed\u8fd0\u884c\uff08\u5728\u4f4e\u4f18\u5148\u7ea7\uff09\u3002</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u4e00\u4e2a\u4ea4\u4e92\u578b\u5de5\u4f5c\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section Q2\n        B:  100,    10ms\n    section Q1\n        B:          10ms\n    section Q0\n        A:  000,    100ms\n        A:  120,    80ms</code></pre> <p>\u7b97\u6cd5\u7684\u4e3b\u8981\u76ee\u6807</p> <p>\u5982\u679c\u4e0d\u77e5\u9053\u5de5\u4f5c\u662f\u77ed\u5de5\u4f5c\u8fd8\u662f\u957f\u5de5\u4f5c\uff0c\u90a3\u4e48\u5c31\u5728\u5f00\u59cb\u7684\u65f6\u5019\u5047\u8bbe\u5176\u662f\u77ed\u5de5\u4f5c\uff0c\u5e76\u8d4b\u4e88\u6700\u9ad8\u4f18\u5148\u7ea7\u3002 \u5982\u679c\u786e\u5b9e\u662f\u77ed\u5de5\u4f5c\uff0c\u5219\u5f88\u5feb\u4f1a\u6267\u884c\u5b8c\u6bd5\uff0c\u5426\u5219\u5c06\u88ab\u6162\u6162\u79fb\u5165\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u800c\u8fd9\u65f6\u8be5\u5de5\u4f5c\u4e5f\u88ab\u8ba4\u4e3a\u662f\u957f\u5de5\u4f5c\u4e86\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cMLFQ \u8fd1\u4f3c\u4e8e SJF\u3002</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html#3-io","title":"\u5b9e\u4f8b 3\uff1a\u5982\u679c\u6709 I/O \u5462","text":"<p>\u5982\u679c\u8fdb\u7a0b\u5728\u65f6\u95f4\u7247\u7528\u5b8c\u4e4b\u524d\u4e3b\u52a8\u653e\u5f03 CPU \uff0c\u5219\u4e0d\u201c\u5904\u7f5a\u201d\u5b83\uff0c\u4fdd\u6301\u5b83\u7684\u4f18\u5148\u7ea7\u4e0d\u53d8\u3002</p> <p>\u4ea4\u4e92\u578b\u5de5\u4f5c B \u6bcf\u6267\u884c 1ms \u4fbf\u9700\u8981\u8fdb\u884c I/O \u64cd\u4f5c\uff0c\u5b83\u4e0e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5de5\u4f5c A \u7ade\u4e89 CPU \u3002MLFQ \u7b97\u6cd5\u4fdd\u6301 B \u5728\u6700\u9ad8\u4f18\u5148\u7ea7\uff0c\u56e0\u4e3a B \u603b\u662f\u8ba9\u51fa CPU \u3002</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u6df7\u5408 I/O \u5bc6\u96c6\u578b\u548c CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section Q2\n        B:  000,    1ms\n        B:  010,    1ms\n        B:  020,    1ms\n        B:  030,    1ms\n        B:  040,    1ms\n        B:  050,    1ms\n        B:  060,    1ms\n        B:  070,    1ms\n        B:  080,    1ms\n        B:  090,    1ms\n        B:  100,    1ms\n        B:  110,    1ms\n        B:  120,    1ms\n        B:  130,    1ms\n        B:  140,    1ms\n        B:  150,    1ms\n        B:  160,    1ms\n        B:  170,    1ms\n        B:  180,    1ms\n        B:  190,    1ms\n    section Q1\n    section Q0\n        A:  001,    9ms\n        A:  011,    9ms\n        A:  021,    9ms\n        A:  031,    9ms\n        A:  041,    9ms\n        A:  051,    9ms\n        A:  061,    9ms\n        A:  071,    9ms\n        A:  081,    9ms\n        A:  091,    9ms\n        A:  101,    9ms\n        A:  111,    9ms\n        A:  121,    9ms\n        A:  131,    9ms\n        A:  141,    9ms\n        A:  151,    9ms\n        A:  161,    9ms\n        A:  171,    9ms\n        A:  181,    9ms\n        A:  191,    9ms</code></pre>"},{"location":"cs/os/ostep/08multi_level_feedback.html#mlfq","title":"\u5f53\u524d MLFQ \u7684\u4e00\u4e9b\u95ee\u9898","text":"\u201c\u9965\u997f\u95ee\u9898\u201d <p>\u5982\u679c\u7cfb\u7edf\u6709\u201c\u592a\u591a\u201d\u4ea4\u4e92\u578b\u5de5\u4f5c\uff0c\u5c31\u4f1a\u4e0d\u65ad\u5360\u7528 CPU \uff0c\u5bfc\u81f4\u957f\u5de5\u4f5c\u6c38\u8fdc\u65e0\u6cd5\u5f97\u5230 CPU\uff08\u5b83\u4eec\u997f\u6b7b\u4e86\uff09\u3002</p> \u611a\u5f04\u8c03\u5ea6\u7a0b\u5e8f\uff08game the scheduler\uff09 <p>\u7528\u4e00\u4e9b\u5351\u9119\u7684\u624b\u6bb5\u6b3a\u9a97\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8ba9\u5b83\u7ed9\u4f60\u8fdc\u8d85\u516c\u5e73\u7684\u8d44\u6e90\u3002\u4e0a\u8ff0\u7b97\u6cd5\u5bf9\u5982\u4e0b\u7684\u653b\u51fb\u675f\u624b\u65e0\u7b56\uff1a\u8fdb\u7a0b\u5728\u65f6\u95f4\u7247\u7528\u5b8c\u4e4b\u524d\uff0c\u8c03\u7528\u4e00\u4e2a I/O \u64cd\u4f5c\uff08\u6bd4\u5982\u8bbf\u95ee\u4e00\u4e2a\u65e0\u5173\u7684\u6587\u4ef6\uff09\uff0c\u4ece\u800c\u4e3b\u52a8\u91ca\u653e CPU\u3002\u5982\u6b64\u4fbf\u53ef\u4ee5\u4fdd\u6301\u5728\u9ad8\u4f18\u5148\u7ea7\uff0c\u5360\u7528\u66f4\u591a\u7684 CPU \u65f6\u95f4\u3002</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html#83-2","title":"8.3 \u5c1d\u8bd5 2\uff1a\u63d0\u5347\u4f18\u5148\u7ea7","text":"<ul> <li>\u89c4\u5219 5\uff1a\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4 \\(S\\)\uff0c\u5c31\u5c06\u7cfb\u7edf\u4e2d\u6240\u6709\u5de5\u4f5c\u91cd\u65b0\u52a0\u5165\u6700\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u3002</li> </ul> <p>\u957f\u5de5\u4f5c\u4e0e\u4e24\u4e2a\u77ed\u5de5\u4f5c\u7ade\u4e89 CPU \u65f6\uff0c\u957f\u5de5\u4f5c\u5728\u4e24\u4e2a\u77ed\u5de5\u4f5c\u5230\u8fbe\u540e\u88ab\u997f\u6b7b\u3002</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u4e0d\u91c7\u7528\u4f18\u5148\u7ea7\u63d0\u5347\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 50millisecond\n\n    section Q2\n        A:  000,    10ms\n        B:  100,    5ms\n        C:  105,    5ms\n        B:  110,    5ms\n        C:  115,    5ms\n        B:  120,    5ms\n        C:  125,    5ms\n        B:  130,    5ms\n        C:  135,    5ms\n        B:  140,    5ms\n        C:  145,    5ms\n        B:  150,    5ms\n        C:  155,    5ms\n        B:  160,    5ms\n        C:  165,    5ms\n        B:  170,    5ms\n        C:  175,    5ms\n        B:  180,    5ms\n        C:  185,    5ms\n        B:  190,    5ms\n        C:  195,    5ms\n    section Q1\n        A:  010,    10ms\n    section Q0\n        A:  020,    80ms</code></pre> <p>\u6bcf 50ms \u5c31\u6709\u4e00\u6b21\u4f18\u5148\u7ea7\u63d0\u5347\uff08\u8fd9\u91cc\u53ea\u662f\u4e3e\u4f8b\uff0c\u8fd9\u4e2a\u503c\u53ef\u80fd\u8fc7\u5c0f\uff09\uff0c\u56e0\u6b64\u81f3\u5c11\u4fdd\u8bc1\u957f\u5de5\u4f5c\u4f1a\u6709\u4e00\u4e9b\u8fdb\u5c55\uff0c\u6bcf\u8fc7 50ms \u5c31\u88ab\u63d0\u5347\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\uff0c\u4ece\u800c\u5b9a\u671f\u83b7\u5f97\u6267\u884c\u3002</p> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u91c7\u7528\u4f18\u5148\u7ea7\u63d0\u5347\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 50millisecond\n\n    section Q2\n        A:  000,    10ms\n        A:  050,    10ms\n        A:  100,    10ms\n        B:  110,    5ms\n        C:  115,    5ms\n        B:  120,    5ms\n        C:  125,    5ms\n        B:  130,    5ms\n        C:  135,    5ms\n        B:  140,    5ms\n        C:  145,    5ms\n        A:  150,    10ms\n        B:  160,    5ms\n        C:  165,    5ms\n        B:  170,    5ms\n        C:  175,    5ms\n        B:  180,    5ms\n        C:  185,    5ms\n        B:  190,    5ms\n        C:  195,    5ms\n    section Q1\n        A:  010,    10ms\n        A:  060,    10ms\n    section Q0\n        A:  020,    30ms\n        A:  070,    30ms</code></pre> <p>\u5982\u679c \\(S\\) \u8bbe\u7f6e\u5f97\u592a\u9ad8\uff0c\u957f\u5de5\u4f5c\u4f1a\u9965\u997f\uff1b\u5982\u679c\u8bbe\u7f6e\u5f97\u592a\u4f4e\uff0c\u4ea4\u4e92\u578b\u5de5\u4f5c\u53c8\u5f97\u4e0d\u5230\u5408\u9002\u7684 CPU \u65f6\u95f4\u6bd4\u4f8b\u3002</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html#84-3","title":"8.4 \u5c1d\u8bd5 3\uff1a\u66f4\u597d\u7684\u8ba1\u65f6\u65b9\u5f0f","text":"<p>\u8c03\u5ea6\u7a0b\u5e8f\u5e94\u8be5\u8bb0\u5f55\u4e00\u4e2a\u8fdb\u7a0b\u5728\u67d0\u4e00\u5c42\u4e2d\u6d88\u8017\u7684\u603b\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u5728\u8c03\u5ea6\u65f6\u91cd\u65b0\u8ba1\u65f6\u3002\u53ea\u8981\u8fdb\u7a0b\u7528\u5b8c\u4e86\u81ea\u5df1\u7684\u914d\u989d\uff0c\u5c31\u5c06\u5b83\u964d\u5230\u4f4e\u4e00\u4f18\u5148\u7ea7\u7684\u961f\u5217\u4e2d\u53bb\u3002\u4e0d\u8bba\u5b83\u662f\u4e00\u6b21\u7528\u5b8c\u7684\uff0c\u8fd8\u662f\u62c6\u6210\u5f88\u591a\u6b21\u7528\u5b8c\u3002</p> <p>\u91cd\u5199\u89c4\u5219 4a \u548c 4b \uff1a</p> <ul> <li>\u89c4\u5219 4\uff1a\u4e00\u65e6\u5de5\u4f5c\u7528\u5b8c\u4e86\u5176\u5728\u67d0\u4e00\u5c42\u4e2d\u7684\u65f6\u95f4\u914d\u989d\uff08\u65e0\u8bba\u4e2d\u95f4\u4e3b\u52a8\u653e\u5f03\u4e86\u591a\u5c11\u6b21CPU\uff09\uff0c\u5c31\u964d\u4f4e\u5176\u4f18\u5148\u7ea7\uff08\u79fb\u5165\u4f4e\u4e00\u7ea7\u961f\u5217\uff09\u3002</li> </ul> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u4e0d\u91c7\u7528\u611a\u5f04\u53cd\u5236\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\nsection Q2\n        B:  001,    9ms\n        B:  011,    9ms\n        B:  021,    9ms\n        B:  031,    9ms\n        B:  041,    9ms\n        B:  051,    9ms\n        B:  061,    9ms\n        B:  071,    9ms\n        B:  081,    9ms\n        B:  091,    9ms\n        B:  101,    9ms\n        B:  111,    9ms\n        B:  121,    9ms\n        B:  131,    9ms\n        B:  141,    9ms\n        B:  151,    9ms\n        B:  161,    9ms\n        B:  171,    9ms\n        B:  181,    9ms\n        B:  191,    9ms\n    section Q1\n    section Q0\n        A:  000,    1ms\n        A:  010,    1ms\n        A:  020,    1ms\n        A:  030,    1ms\n        A:  040,    1ms\n        A:  050,    1ms\n        A:  060,    1ms\n        A:  070,    1ms\n        A:  080,    1ms\n        A:  090,    1ms\n        A:  100,    1ms\n        A:  110,    1ms\n        A:  120,    1ms\n        A:  130,    1ms\n        A:  140,    1ms\n        A:  150,    1ms\n        A:  160,    1ms\n        A:  170,    1ms\n        A:  180,    1ms\n        A:  190,    1ms</code></pre> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u91c7\u7528\u611a\u5f04\u53cd\u5236\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section Q2\n        B:  active, 000,    10ms\n    section Q1\n        B:  active, 011,    9ms\n        B:  active, 021,    1ms\n    section Q0\n        A:          010,    1ms\n        A:          020,    1ms\n        A:          022,    8ms\n        B:  active,         9ms\n        A:                  1ms\n        B:  active,         1ms\n        A:                  9ms\n        B:  active,         9ms\n        A:                  1ms\n        B:  active,         1ms\n        A:                  9ms\n        B:  active,         9ms\n        A:                  1ms\n        B:  active,         1ms\n        A:                  9ms\n        B:  active,         9ms\n        A:                  1ms\n        B:  active,         1ms\n        A:                  9ms</code></pre> <p>B \u6bcf\u4e2a\u65f6\u95f4\u7247\u7684\u6700\u540e 1ms \u65f6\u4f1a\u4e3b\u52a8\u8c03\u7528 I/O \u4e00\u6b21\uff0c\u4ee5\u6b64\u611a\u5f04\u8c03\u5ea6\u5668\u3002</p> <p>\u901a\u8fc7\u91c7\u7528\u611a\u5f04\u53cd\u5236\uff0c\u8bb0\u5f55\u5de5\u4f5c\u5728\u67d0\u5c42\u6d88\u8017\u7684\u603b\u65f6\u95f4\uff0c\u4e0d\u8bba\u5b83\u662f\u4ee5\u6b64\u7528\u5b8c\u8fd8\u662f\u591a\u6b21\u7528\u5b8c\uff0c\u53ea\u8981\u8017\u5c3d\u4e86\u65f6\u95f4\u914d\u989d\uff0c\u5c31\u964d\u4f4e\u5176\u4f18\u5148\u7ea7\uff08\u5f53\u7136\u8fd8\u4f1a\u4e2d\u65ad\u5b83\uff09\u3002</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html#85-mlfq","title":"8.5 MLFQ \u8c03\u4f18\u53ca\u5176\u4ed6\u95ee\u9898","text":"<p>\u5173\u4e8e MLFQ \u8c03\u5ea6\u7b97\u6cd5\u8fd8\u6709\u4e00\u4e9b\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e2a\u5927\u95ee\u9898\u662f\u5982\u4f55\u914d\u7f6e\u4e00\u4e2a\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4f8b\u5982\uff0c\u914d\u7f6e\u591a\u5c11\u961f\u5217\uff1f\u6bcf\u4e00\u5c42\u961f\u5217\u7684\u65f6\u95f4\u7247\u914d\u7f6e\u591a\u5927\uff1f\u4e3a\u4e86\u907f\u514d\u9965\u997f\u95ee\u9898\u4ee5\u53ca\u8fdb\u7a0b\u884c\u4e3a\u6539\u53d8\uff0c\u5e94\u8be5\u591a\u4e45\u63d0\u5347\u4e00\u6b21\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff1f\u8fd9\u4e9b\u95ee\u9898\u90fd\u6ca1\u6709\u663e\u800c\u6613\u89c1\u7684\u7b54\u6848\uff0c\u56e0\u6b64\u53ea\u6709\u5229\u7528\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7ecf\u9a8c\uff0c\u4ee5\u53ca\u540e\u7eed\u5bf9\u8c03\u5ea6\u7a0b\u5e8f\u7684\u8c03\u4f18\uff0c\u624d\u4f1a\u5bfc\u81f4\u4ee4\u4eba\u6ee1\u610f\u7684\u5e73\u8861\u3002</p> <p>\u5927\u591a\u6570\u7684 MLFQ \u53d8\u4f53\u90fd\u652f\u6301\u4e0d\u540c\u961f\u5217\u53ef\u53d8\u7684\u65f6\u95f4\u7247\u957f\u5ea6\u3002</p> <ul> <li>\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u901a\u5e38\u53ea\u6709\u8f83\u77ed\u7684\u65f6\u95f4\u7247\uff08\u6bd4\u5982 10ms \u6216\u8005\u66f4\u5c11\uff09\uff0c\u56e0\u800c\u8fd9\u4e00\u5c42\u7684\u4ea4\u4e92\u5de5\u4f5c\u53ef\u4ee5\u66f4\u5feb\u5730\u5207\u6362\u3002</li> <li>\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\u66f4\u591a\u7684\u662f CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\uff0c\u914d\u7f6e\u66f4\u957f\u7684\u65f6\u95f4\u7247\u4f1a\u53d6\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002</li> </ul> <pre><code>---\ndisplayMode: compact\n---\ngantt\n    title \u4f18\u5148\u7ea7\u8d8a\u4f4e\uff0c\u65f6\u95f4\u7247\u8d8a\u957f\n    dateFormat SSS\n    axisFormat %Lms\n    tickInterval 10millisecond\n\n    section Q2\n        A:          000,    10ms\n        B:  active,         10ms\n    section Q1\n        A:                  20ms\n        B:  active,         20ms\n    section Q0\n        A:                  40ms\n        B:  active,         40ms\n        A:                  40ms\n        B:  active,         40ms</code></pre> <p>\u63d0\u793a\uff1a\u907f\u514d\u5deb\u6bd2\u5e38\u91cf\uff08Ousterhout \u5b9a\u5f8b\uff09</p> <p>\u5c3d\u53ef\u80fd\u907f\u514d\u5deb\u6bd2\u5e38\u91cf\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u7136\u800c\uff0c\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u901a\u5e38\u5f88\u96be\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u81ea\u5df1\u53bb\u5b66\u4e60\u4e00\u4e2a\u5f88\u4f18\u5316\u7684\u503c\uff0c\u4f46\u8fd9\u540c\u6837\u4e5f\u4e0d\u5bb9\u6613\u3002 \u56e0\u6b64\uff0c\u901a\u5e38\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u5199\u6ee1\u5404\u79cd\u53c2\u6570\u503c\u9ed8\u8ba4\u503c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u5f97\u7cfb\u7edf\u7ba1\u7406\u5458\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u4fee\u6539\u8c03\u6574\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u4f7f\u7528\u8005\u5e76\u4e0d\u4f1a\u53bb\u4fee\u6539\u8fd9\u4e9b\u9ed8\u8ba4\u503c\uff0c\u8fd9\u65f6\u5c31\u5bc4\u5e0c\u671b\u4e8e\u9ed8\u8ba4\u503c\u5408\u9002\u4e86\u3002 \u8fd9\u4e2a\u63d0\u793a\u662f\u7531\u8d44\u6df1\u7684 OS \u6559\u6388 John Ousterhout \u63d0\u51fa\u7684\uff0c\u56e0\u6b64\u79f0\u4e3a Ousterhout \u5b9a\u5f8b\uff08Ousterhout\u2019s Law\uff09\u3002</p> <p>Solaris \u7684 MLFQ \u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u7ec4\u8868\u6765\u914d\u7f6e\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8be5\u8868\u9ed8\u8ba4\u6709 60 \u5c42\u961f\u5217\uff0c\u65f6\u95f4\u7247\u957f\u5ea6\u4ece 20ms\uff08\u6700\u9ad8\u4f18\u5148\u7ea7\uff09\uff0c\u5230\u51e0\u767e ms\uff08\u6700\u4f4e\u4f18\u5148\u7ea7\uff09\uff0c\u6bcf\u4e00\u79d2\u5de6\u53f3\u63d0\u5347\u4e00\u6b21\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u3002</p> <p>FreeBSD \u8c03\u5ea6\u8f66\u5f88\u96be\u8fc7\u5e8f\uff084.3 \u7248\u672c\uff09\u6ca1\u7528\u8868\uff0c\u5b83\u91c7\u7528\u6570\u5b66\u516c\u5f0f\u6765\u8ba1\u7b97\u67d0\u4e2a\u5de5\u4f5c\u7684\u4f18\u5148\u7ea7\u3002</p> <p>\u6709\u4e9b\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u6700\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u7559\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\uff0c\u6709\u4e9b\u7cfb\u7edf\u652f\u6301\u7528\u6237\u7ed9\u51fa\u4f18\u5148\u7ea7\u5efa\u8bae\uff08\u662f\u7684\u53ea\u662f\u5efa\u8bae\uff09\uff0c\u4f1a\u7565\u5fae\u63d0\u9ad8\u4f18\u5148\u7ea7\u3002</p>"},{"location":"cs/os/ostep/08multi_level_feedback.html#86-mlfq","title":"8.6 MLFQ\uff1a\u5c0f\u7ed3","text":"<ul> <li>\u89c4\u5219 1\uff1a\u5982\u679c A \u7684\u4f18\u5148\u7ea7 &gt; B \u7684\u4f18\u5148\u7ea7\uff0c\u8fd0\u884c A\uff08\u4e0d\u8fd0\u884c B\uff09\uff1b</li> <li>\u89c4\u5219 2\uff1a\u5982\u679c A \u7684\u4f18\u5148\u7ea7 = B \u7684\u4f18\u5148\u7ea7\uff0c\u8f6e\u8f6c\u8fd0\u884c A \u548c B\uff1b</li> <li>\u89c4\u5219 3\uff1a\u5de5\u4f5c\u8fdb\u5165\u7cfb\u7edf\u65f6\uff0c\u653e\u5728\u6700\u9ad8\u4f18\u5148\u7ea7\uff08\u6700\u4e0a\u5c42\u961f\u5217\uff09\uff1b</li> <li>\u89c4\u5219 4\uff1a\u4e00\u65e6\u5de5\u4f5c\u7528\u5b8c\u4e86\u5176\u5728\u67d0\u4e00\u5c42\u4e2d\u7684\u65f6\u95f4\u914d\u989d\uff08\u65e0\u8bba\u4e2d\u95f4\u4e3b\u52a8\u653e\u5f03\u4e86\u591a\u5c11\u6b21 CPU\uff09\uff0c\u5c31\u964d\u4f4e\u5176\u4f18\u5148\u7ea7\uff08\u79fb\u5165\u4f4e\u4e00\u7ea7\u961f\u5217\uff09\uff1b</li> <li>\u89c4\u5219 5\uff1a\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4 \\(S\\) \uff0c\u5c31\u5c06\u7cfb\u7edf\u4e2d\u6240\u6709\u5de5\u4f5c\u91cd\u65b0\u52a0\u5165\u6700\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u3002</li> </ul>"},{"location":"cs/os/ostep/08multi_level_feedback.html#_1","title":"\u4f5c\u4e1a","text":"<p>\u597d\u50cf\u56de\u5230\u4e86\u4e2d\u5b66\u65f6\u4ee3\uff0c\u6211\u8fd8\u662f\u5f88\u4e0d\u559c\u6b22\u4f5c\u4e1a\u3002</p> <p>Question</p> <p>1\uff0e\u53ea\u7528\u4e24\u4e2a\u5de5\u4f5c\u548c\u4e24\u4e2a\u961f\u5217\u8fd0\u884c\u51e0\u4e2a\u968f\u673a\u751f\u6210\u7684\u95ee\u9898\u3002\u9488\u5bf9\u6bcf\u4e2a\u5de5\u4f5c\u8ba1\u7b97 MLFQ \u7684\u6267\u884c\u8bb0\u5f55\u3002\u9650\u5236\u6bcf\u9879\u4f5c\u4e1a\u7684\u957f\u5ea6\u5e76\u5173\u95ed I/O\uff0c\u8ba9\u4f60\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\u3002</p> <p>Answer</p> ./mlfq.py -n 2 -j 2 -M 0 -c<pre><code>Job List:\n  Job  0: startTime   0 - runTime  84 - ioFreq   0\n  Job  1: startTime   0 - runTime  42 - ioFreq   0\n...\nFinal statistics:\n  Job  0: startTime   0 - response   0 - turnaround 126\n  Job  1: startTime   0 - response  10 - turnaround  92\n\n  Avg  1: startTime n/a - response 5.00 - turnaround 109.00\n</code></pre> <p>$ \\bar{T_{\\text{turnaround}}} = \\frac{T_{\\text{0 finish}} + T_{\\text{1 finish}}}{2} = \\frac{92 + 126}{2} = 109 $</p> <p>$ \\bar{T_{\\text{response}}} = \\frac{T_{\\text{0 response}} + T_{\\text{1 response}}}{2} = \\frac{0 + 10}{2} = 5 $</p> <p>Question</p> <p>2\uff0e\u5982\u4f55\u8fd0\u884c\u8c03\u5ea6\u7a0b\u5e8f\u6765\u91cd\u73b0\u672c\u7ae0\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u4f8b\uff1f</p> <p>Answer</p> <pre><code>$ # 8.2\n$ ./mlfq.py -n 3 -l 0,200,0 -q 10 -c\n$ # 8.3\n$ ./mlfq.py -n 3 -l 0,200,0:100,20,0 -q 10 -c\n$ # 8.4\n$ ./mlfq.py -n 3 -l 0,200,0:50,25,1 -q 10 -i 4 -c\n$ # 8.5\n$ ./mlfq.py -n 3 -l 0,200,0:50,20,3:53,20,3 -q 10 -i 3 -c\n$ ./mlfq.py -n 3 -l 0,200,0:50,20,3:53,20,3 -q 10 -i 3 -c -B 30 -S\n$ # 8.6\n$ ./mlfq.py -n 3 -l 0,200,0:50,100,9 -i 1 -S -c\n$ ./mlfq.py -n 3 -l 0,200,0:50,100,9 -i 1 -c\n</code></pre> <p>Question</p> <p>3\uff0e\u5c06\u5982\u4f55\u914d\u7f6e\u8c03\u5ea6\u7a0b\u5e8f\u53c2\u6570\uff0c\u50cf\u8f6e\u8f6c\u8c03\u5ea6\u7a0b\u5e8f\u90a3\u6837\u5de5\u4f5c\uff1f</p> <p>Answer</p> <p>\u53ea\u7528\u4e00\u4e2a\u961f\u5217\uff0c\u8fd9\u6837\u5c31\u4e0d\u5b58\u5728\u4efb\u52a1\u4f18\u5148\u7ea7\u7684\u95ee\u9898\u4e86\uff0c\u540c\u961f\u5217\u91c7\u7528\u8f6e\u8f6c\u3002</p> <p>Question</p> <p>4\uff0e\u8bbe\u8ba1\u4e24\u4e2a\u5de5\u4f5c\u7684\u8d1f\u8f7d\u548c\u8c03\u5ea6\u7a0b\u5e8f\u53c2\u6570\uff0c\u4ee5\u4fbf\u4e00\u4e2a\u5de5\u4f5c\u5229\u7528\u8f83\u65e9\u7684\u89c4\u5219 4a \u548c 4b\uff08\u7528 -S \u6807\u5fd7\u6253\u5f00\uff09\u6765\u201c\u611a\u5f04\u201d\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5185\u83b7\u5f97 99%\u7684 CPU\u3002</p> <p>Answer</p> <pre><code>$ ./mlfq.py -n 3 -q 10 -i 1 -S -l 0,50,9:0,50,0 -c | grep \"Run JOB 0\"\n</code></pre> <p>\u4f1a\u53d1\u73b0\u4efb\u52a1 0 \u4e00\u76f4\u5728\u4f18\u5148\u7ea7 2 \u4e0b\u8fd0\u884c</p> <p>Question</p> <p>5\uff0e\u7ed9\u5b9a\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5176\u6700\u9ad8\u961f\u5217\u4e2d\u7684\u65f6\u95f4\u7247\u957f\u5ea6\u4e3a 10ms\uff0c\u4f60\u9700\u8981\u5982\u4f55\u9891\u7e41\u5730\u5c06\u5de5\u4f5c\u63a8\u56de\u5230\u6700\u9ad8\u4f18\u5148\u7ea7\u7ea7\u522b\uff08\u5e26\u6709-B \u6807\u5fd7\uff09\uff0c\u4ee5\u4fdd\u8bc1\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\uff08\u5e76\u53ef\u80fd\u9965\u997f\uff09\u7684\u5de5\u4f5c\u5f97\u5230\u81f3\u5c115%\u7684 CPU\uff1f</p> <p>Answer</p> <p>$ T_{\\text{Boost}} = \\frac{10}{5\\%} = 200ms $</p> <p>Question</p> <p>6\uff0e\u8c03\u5ea6\u4e2d\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u521a\u5b8c\u6210 I/O \u7684\u4f5c\u4e1a\u6dfb\u52a0\u5728\u961f\u5217\u7684\u54ea\u4e00\u7aef\u3002-I \u6807\u5fd7\u6539\u53d8\u4e86\u8fd9\u4e2a\u8c03\u5ea6\u6a21\u62df\u5668\u7684\u8fd9\u65b9\u9762\u884c\u4e3a\u3002\u5c1d\u8bd5\u4e00\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u770b\u770b\u4f60\u662f\u5426\u80fd\u770b\u5230\u8fd9\u4e2a\u6807\u5fd7\u7684\u6548\u679c\u3002</p> <p>Answer</p> push back<pre><code>$ ./mlfq.py -j 2 -n 3 -q 20 -l 0,20,2:0,20,2 -i 1 -c\n</code></pre> push head<pre><code>$ ./mlfq.py -j 2 -n 3 -q 20 -l 0,20,2:0,20,2 -i 1 -I -c\n</code></pre>"},{"location":"cs/pl/index.html","title":"Programming Language &amp; ISA","text":""},{"location":"cs/pl/index.html#table-of-contents","title":"Table of Contents","text":"<ul> <li>C<ul> <li>\u901a\u8fc7 HTTPS \u5305\u542b\u5934\u6587\u4ef6</li> </ul> </li> <li>Python</li> <li>Racket</li> <li>RISC-V ISA</li> <li>Rust</li> </ul>"},{"location":"cs/pl/c/index.html","title":"C","text":""},{"location":"cs/pl/c/including_c_files_over_https.html","title":"\u901a\u8fc7 HTTPS \u5305\u542b\u5934\u6587\u4ef6","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4f1a\u5b9e\u73b0\u4ee5\u4e0b\u6548\u679c\uff0c\u8ba9 C \u8bed\u8a00\u53ef\u4ee5\u4ece\u4e92\u8054\u7f51\u4e0a <code>#include</code> \u5934\u6587\u4ef6\u3002</p> include_files_from_internet.c<pre><code>#define STB_SPRINTF_IMPLEMENTATION\n#include &lt;https://raw.githubusercontent.com/nothings/stb/master/stb_sprintf.h&gt; // &lt;- look at this \n#include &lt;stdio.h&gt;\n\nint main() {\n    char buffer[20];\n\n    // Using functions defined by stb_sprintf.h\n    stbsp_sprintf(buffer, \"Hello %s\", \"NAVI\");\n    puts(buffer);\n\n    return 0;\n}\n</code></pre> <p>\u4f60\u77e5\u9053\u7684\uff0c4202 \u5e74\uff0cEverything Over HTTPS\uff08\u7b11\uff09\u3002</p> <p>My Patch: https://gist.github.com/13m0n4de/84912522cce6db31da069baf1add04f8</p>"},{"location":"cs/pl/c/including_c_files_over_https.html#_1","title":"\u8d77\u56e0","text":"<p>@rexim 2021 \u5e74\u7684\u65f6\u5019\u53d1\u4e86\u4e00\u4e2a\u89c6\u9891\uff1aIncluding C File Over HTTPS \uff0c\u4ed6\u901a\u8fc7\u4fee\u6539 TinyCC \u7f16\u8bd1\u5668\u5b8c\u6210\u4e86\u4e0a\u8ff0\u6548\u679c\u3002\u4f46\u662f\u73b0\u5728 TCC \u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u4ed6\u7684\u8865\u4e01\u4e0d\u80fd\u7528\u4e86\u3002</p> <p>\u6211\u8bd5\u7740\u91cd\u65b0\u5206\u6790\u4e86 TCC \u7684\u6e90\u7801\uff0c\u5199\u4e86\u4efd\u65b0\u7684 Patch \uff0c\u8fd9\u7bc7\u6587\u7ae0\u7528\u4e8e\u8bb0\u5f55\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u3002</p>"},{"location":"cs/pl/c/including_c_files_over_https.html#tcc","title":"\u4e3a\u4ec0\u4e48\u662f TCC \uff1f","text":"<p>\u8bed\u8a00\u8bed\u6cd5\u4e0a\u7684 Hack \u5c11\u4e0d\u4e86\u6298\u817e\u7f16\u8bd1\u5668\uff0c\u6211\u77ed\u6682\u7684\u751f\u547d\u4e0d\u652f\u6301\u6211\u9605\u8bfb\u51e0\u767e\u4e07\u884c\u4ee5\u4e0a\u7684\u5927\u578b\u7f16\u8bd1\u5668\uff08\u5982 GCC\uff09\uff0c\u6700\u597d\u662f\u5bfb\u627e\u7cbe\u7b80\u7684\u5b9e\u73b0\u3002</p> <p>Tiny C Compiler (TCC or TinyCC) \u5c31\u662f\u5176\u4e2d\u4e4b\u4e00<sup>1</sup>\uff0c\u5b8c\u6210\u4e86\u5927\u90e8\u5206 C99 ISO \u6807\u51c6\u3002</p> <p>\u5b83\u8db3\u591f\u5c0f\uff0c\u8db3\u591f\u6613\u62d3\u5c55\uff0c\u6240\u4ee5\u5c31\u662f\u5b83\u4e86\u3002</p>"},{"location":"cs/pl/c/including_c_files_over_https.html#tcc_1","title":"\u5206\u6790 TCC","text":"<p>\u514b\u9686\u4ed3\u5e93\uff1a</p> <pre><code>$ git clone git://repo.or.cz/tinycc.git\n</code></pre> <p>\u53ea\u6709\u51e0\u4e07\u884c\u4ee3\u7801\uff0c\u771f\u597d\u3002</p> <pre><code>===============================================================================\n Language            Files        Lines         Code     Comments       Blanks\n===============================================================================\n GNU Style Assembly      7         2151         1906           52          193\n Batch                   1          204          182            0           22\n C                     214        73313        60945         5499         6869\n C Header              109        45901        38807         1906         5188\n Makefile                5         1188          870          134          184\n Module-Definition       6         3520         3467            0           53\n Perl                    1          427          306           63           58\n Shell                   3         1058          939           46           73\n Plain Text              1          168            0          111           57\n===============================================================================\n Total                 347       127930       107422         7811        12697\n===============================================================================\n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c\uff1a(1)</p> <ol> <li>\u662f\u7684\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u7f16\u8bd1\u5668\u6765\u7f16\u8bd1\u7f16\u8bd1\u5668\uff0c\u65e0\u8bba\u662f GCC \u8fd8\u662f\u4ec0\u4e48</li> </ol> <pre><code>$ ./configure\n$ make\n$ ./tcc --version\ntcc version 0.9.28rc 2024-01-29 mob@c7263571 (x86_64 Linux)\n$ ./tcc -run examples/ex1.c\nHello World\n</code></pre> <p>\u5f53\u7136\u5b83\u73b0\u5728\u80af\u5b9a\u4e0d\u80fd\u5305\u542b\u8fdc\u7a0b\u6587\u4ef6\uff1a</p> <pre><code>$ ./tcc include_files_from_internet.c\ninclude_files_from_internet.c:2: error: include file 'https://raw.githubusercontent.com/nothings/stb/master/stb_sprintf.h' not found\n</code></pre> <p>\u901a\u8fc7\u62a5\u9519\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f88\u5feb\u5b9a\u4f4d\u5230\u89e3\u6790 <code>#include</code> \u8bed\u53e5\u7684\u4ee3\u7801\u4f4d\u7f6e\uff1a</p> <pre><code>$ rg \"include file .* not found\"\ntccpp.c\n1406:                tcc_error(\"include file '%s' not found\", name);\n</code></pre> tccpp.c<pre><code>static int parse_include(TCCState *s1, int do_next, int test)\n{\n    int c, i;\n    char name[1024], buf[1024], *p;\n    CachedInclude *e;\n\n    c = skip_spaces();\n    if (c == '&lt;' || c == '\\\"') {\n        cstr_reset(&amp;tokcstr);\n        file-&gt;buf_ptr = parse_pp_string(file-&gt;buf_ptr, c == '&lt;' ? '&gt;' : c, &amp;tokcstr);\n        i = tokcstr.size;\n        pstrncpy(name, tokcstr.data, i &gt;= sizeof name ? sizeof name - 1 : i);\n        next_nomacro();\n    } else {\n        /* computed #include : concatenate tokens until result is one of\n           the two accepted forms.  Don't convert pp-tokens to tokens here. */\n    parse_flags = PARSE_FLAG_PREPROCESS\n                    | PARSE_FLAG_LINEFEED\n                    | (parse_flags &amp; PARSE_FLAG_ASM_FILE);\n        name[0] = 0;\n        for (;;) {\n            next();\n            p = name, i = strlen(p) - 1;\n            if (i &gt; 0\n                &amp;&amp; ((p[0] == '\"' &amp;&amp; p[i] == '\"')\n                 || (p[0] == '&lt;' &amp;&amp; p[i] == '&gt;')))\n                break;\n            if (tok == TOK_LINEFEED)\n                tcc_error(\"'#include' expects \\\"FILENAME\\\" or &lt;FILENAME&gt;\");\n            pstrcat(name, sizeof name, get_tok_str(tok, &amp;tokc));\n    }\n        c = p[0];\n        /* remove '&lt;&gt;|\"\"' */\n        memmove(p, p + 1, i - 1), p[i - 1] = 0;\n    }\n\n    i = do_next ? file-&gt;include_next_index : -1;\n    for (;;) {\n        ++i;\n        if (i == 0) {\n            /* check absolute include path */\n            if (!IS_ABSPATH(name))\n                continue;\n            buf[0] = '\\0';\n        } else if (i == 1) {\n            /* search in file's dir if \"header.h\" */\n            if (c != '\\\"')\n                continue;\n            p = file-&gt;true_filename;\n            pstrncpy(buf, p, tcc_basename(p) - p);\n        } else {\n            int j = i - 2, k = j - s1-&gt;nb_include_paths;\n            if (k &lt; 0)\n                p = s1-&gt;include_paths[j];\n            else if (k &lt; s1-&gt;nb_sysinclude_paths)\n                p = s1-&gt;sysinclude_paths[k];\n            else if (test)\n                return 0;\n            else\n                tcc_error(\"include file '%s' not found\", name);\n            pstrcpy(buf, sizeof buf, p);\n            pstrcat(buf, sizeof buf, \"/\");\n        }\n        pstrcat(buf, sizeof buf, name);\n        e = search_cached_include(s1, buf, 0);\n        if (e &amp;&amp; (define_find(e-&gt;ifndef_macro) || e-&gt;once)) {\n            /* no need to parse the include because the 'ifndef macro'\n               is defined (or had #pragma once) */\n#ifdef INC_DEBUG\n            printf(\"%s: skipping cached %s\\n\", file-&gt;filename, buf);\n#endif\n            return 1;\n        }\n        if (tcc_open(s1, buf) &gt;= 0)\n            break;\n    }\n\n    if (test) {\n        tcc_close();\n    } else {\n        if (s1-&gt;include_stack_ptr &gt;= s1-&gt;include_stack + INCLUDE_STACK_SIZE)\n            tcc_error(\"#include recursion too deep\");\n        /* push previous file on stack */\n        *s1-&gt;include_stack_ptr++ = file-&gt;prev;\n        file-&gt;include_next_index = i;\n#ifdef INC_DEBUG\n        printf(\"%s: including %s\\n\", file-&gt;prev-&gt;filename, file-&gt;filename);\n#endif\n        /* update target deps */\n        if (s1-&gt;gen_deps) {\n            BufferedFile *bf = file;\n            while (i == 1 &amp;&amp; (bf = bf-&gt;prev))\n                i = bf-&gt;include_next_index;\n            /* skip system include files */\n            if (s1-&gt;include_sys_deps || i - 2 &lt; s1-&gt;nb_include_paths)\n                dynarray_add(&amp;s1-&gt;target_deps, &amp;s1-&gt;nb_target_deps,\n                    tcc_strdup(buf));\n        }\n        /* add include file debug info */\n        tcc_debug_bincl(s1);\n        tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL;\n    }\n    return 1;\n}\n</code></pre>"},{"location":"cs/pl/c/including_c_files_over_https.html#wip","title":"WIP...","text":""},{"location":"cs/pl/c/including_c_files_over_https.html#_2","title":"\u53c2\u9605","text":"<ul> <li>TinyCC: https://bellard.org/tcc/</li> <li>TinyCC Git repo: https://repo.or.cz/tinycc.git</li> <li>STB libs: https://github.com/nothings/stb</li> <li>libcurl HTTPS example: https://curl.se/libcurl/c/https.html</li> <li>libcurl URL parseing example: https://curl.se/libcurl/c/parseurl.html</li> <li>@rexim's Patch: https://gist.github.com/rexim/a6636976d12f67ea530ece118a700317</li> <li>@rexim's Video: https://www.youtube.com/watch?v=4vSyqK3SK-0</li> <li>My Patch: https://gist.github.com/13m0n4de/84912522cce6db31da069baf1add04f8</li> </ul> <ol> <li> <p>\u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u7cbe\u7b80\u7684 C \u8bed\u8a00\u7f16\u8bd1\u5668\uff0c\u6bd4\u5982 LCC \u3001C4 \u3001OTCC \uff0c\u53ea\u4e0d\u8fc7\u5b83\u4eec\u7684\u8bbe\u8ba1\u7406\u5ff5\u4e0d\u540c LCC \u548c TCC \u7684\u5b9e\u73b0\u8db3\u591f\u5b8c\u6574\uff0c\u80fd\u591f\u8986\u76d6\u7f16\u8bd1\u5668\u8bbe\u8ba1\u7684\u4e3b\u8981\u65b9\u9762\uff0c\u9002\u5408\u7528\u6765\u5b66\u4e60\u7f16\u8bd1\u539f\u7406\u6216\u5b9a\u5236\u81ea\u5df1\u7684\u7f16\u8bd1\u5668 C4 \u548c OTCC \u6781\u5ea6\u7b80\u5316\uff0c\u8bed\u4e49\u9ad8\u5ea6\u6d53\u7f29\uff0c\u9700\u8981\u66f4\u591a\u7f16\u7a0b\u6280\u5de7\u00a0\u21a9</p> </li> </ol>"},{"location":"cs/pl/python/index.html","title":"Python","text":""},{"location":"cs/pl/racket/index.html","title":"Racket","text":""},{"location":"cs/pl/riscv/index.html","title":"RISC-V ISA","text":""},{"location":"cs/pl/rust/index.html","title":"Rust","text":""},{"location":"ctf/index.html","title":"Capture The Flag","text":""},{"location":"gamedev/index.html","title":"Game Development &amp; Game Design","text":""},{"location":"sec/index.html","title":"Security","text":""},{"location":"writeups/index.html","title":"Writeups","text":""}]}