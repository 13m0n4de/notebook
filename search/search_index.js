var __index = {"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"index.html","title":"Welcome to the Wired World","text":""},{"location":"changelog.html","title":"\u65f6\u95f4\u7ebf","text":""},{"location":"changelog.html#2024","title":"2024","text":"2024-01-12\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 02.Introduction \u6dfb\u52a0\u201c\u6301\u4e45\u6027\u201d\u548c\u201c\u7b80\u5355\u5386\u53f2\u201d\u5c0f\u8282</p> 2024-01-12\u00b6 <p> CS &gt; OS &gt; OSTEP &gt; 02.Introduction</p> 2024-01-12\u00b6 <p> \u4f7f\u7528 Vercel \u90e8\u7f72</p> 2024-01-12\u00b6 <p> \u7b14\u8bb0\u672c\u4e0a\u7ebf\uff0cWelcome to the Wired World!</p>"},{"location":"todo.html","title":"\u5f85\u529e\u4e8b\u9879","text":""},{"location":"todo.html#_2","title":"\u7b14\u8bb0","text":""},{"location":"todo.html#_3","title":"\u7f51\u7ad9\u5efa\u8bbe","text":"<ul> <li> \u4eae\u8272\u6a21\u5f0f\u4e0b\u66f4\u597d\u7684\u4ee3\u7801\u9ad8\u4eae\u914d\u8272\u65b9\u6848</li> </ul>"},{"location":"cs/index.html","title":"Computer Science","text":""},{"location":"cs/index.html#table-of-contents","title":"Table of Contents","text":"Programming Language &amp; ISA          <ul> <li> Rust  1  0 mins              1705020272 </li> <li> C  1  0 mins              1705012002 </li> <li> Python  1  0 mins              1705012002 </li> <li> Racket  1  0 mins              1705012002 </li> <li> RISC-V ISA  2  0 mins              1705012002 </li> </ul> Operating System          <ul> <li> OSTEP  743  102  4 mins              1705076933 </li> <li> MIT 6.1810  0  0 mins              0 </li> <li> rCore  0  0 mins              0 </li> </ul> Compiler          <ul> </ul>"},{"location":"cs/compiler/index.html","title":"Compiler","text":""},{"location":"cs/os/index.html","title":"Operating System","text":""},{"location":"cs/os/index.html#table-of-contents","title":"Table of Contents","text":"<ul> <li>OSTEP \u5b66\u4e60\u7b14\u8bb0</li> <li>MIT 6.1810: Operating System Engineering \u5b66\u4e60\u7b14\u8bb0</li> <li>rCore-Tutorial-Book-v3 \u5b66\u4e60\u7b14\u8bb0</li> </ul>"},{"location":"cs/os/mit6.1810.html","title":"MIT 6.1810: Operating System Engineering \u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"cs/os/rcore.html","title":"rCore-Tutorial-Book-v3 \u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"cs/os/ostep/index.html","title":"OSTEP \u5b66\u4e60\u7b14\u8bb0","text":"<p>\u8d44\u6e90</p> <ul> <li>OSTEP</li> <li>OSTEP \u4e66\u4e2d\u4ee3\u7801</li> <li>OSTEP \u4e2d\u6587\u7ffb\u8bd1</li> </ul>"},{"location":"cs/os/ostep/index.html#table-of-contents","title":"Table of Contents","text":"<ul> <li>02.Introduction</li> </ul>"},{"location":"cs/os/ostep/02introduction.html","title":"\u7b2c 2 \u7ae0 \u64cd\u4f5c\u7cfb\u7edf\u4ecb\u7ecd","text":"<p>\u8fd9\u7ae0\u5f15\u5165\u4e86\u8bfe\u7a0b\u7684\u4e09\u4e2a\u4e3b\u9898\uff0c\u4e5f\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e09\u4e2a\u91cd\u8981\u529f\u80fd\uff1a</p> <ol> <li>\u865a\u62df\u5316</li> <li>\u5e76\u53d1</li> <li>\u6301\u4e45\u6027</li> </ol> <p>\u4f5c\u8005\u4ecb\u7ecd\u7684\u65f6\u5019\u7528\u4e86\u4e00\u4e9b\u4ee3\u7801\u793a\u4f8b\uff0c\u5176\u4e2d\u8bb8\u591a\u51fd\u6570\u90fd\u88ab\u523b\u610f\u5305\u88c5\u4e86\u4e00\u5c42\uff0c\u4e0d\u77e5\u9053\u662f\u56e0\u4e3a\u4ec0\u4e48\uff0c\u5f88\u591a\u5305\u88c5\u611f\u89c9\u90fd\u4e0d\u592a\u5fc5\u8981\uff0c\u4e00\u4e9b\u4ee3\u7801\u4e5f\u6ca1\u90a3\u4e48\u89c4\u8303\uff0c\u4f5c\u4e3a\u793a\u4f8b\u5012\u662f\u65e0\u4f24\u5927\u96c5\u3002</p> <p>\u4e00\u5f00\u59cb\u6211\u4e0d\u77e5\u9053\u6709\u9644\u5f55\u4ee3\u7801\uff0c\u5168\u90fd\u91cd\u65b0\u6539\u4e86\u4e00\u904d\u3002</p> <p>\u9644\u5f55\u4ee3\u7801\uff1agithub.com/remzi-arpacidusseau/ostep-code/</p>"},{"location":"cs/os/ostep/02introduction.html#21-cpu","title":"2.1 \u865a\u62df\u5316 CPU","text":"cpu.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) {\n  if (argc != 2) {\n    fprintf(stderr, \"usage: cpu &lt;string&gt;\\n\");\n    exit(1);\n  }\n  char *str = argv[1];\n  for (int i = 0; i &lt; 5; i++) {\n    sleep(1);\n    printf(\"%s\\n\", str);\n  }\n}\n</code></pre> <pre><code>$ ./cpu A &amp; ; ./cpu B &amp; ; ./cpu C &amp; ; ./cpu D &amp;\n</code></pre> <p>\u5c31\u80fd\u770b\u5230\u7a0b\u5e8f\u5728\u201c\u540c\u65f6\u8fd0\u884c\u201d\u7684\u5047\u8c61\u3002</p>"},{"location":"cs/os/ostep/02introduction.html#22","title":"2.2 \u865a\u62df\u5316\u5185\u5b58","text":"mem.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) {\n  int *p = malloc(sizeof(int)); // a1\n  assert(p != NULL);\n  printf(\"(%d) memory address of p: %p\\n\", getpid(), p); // a2\n  *p = 0;                                                // a3\n  for (int i = 0; i &lt; 5; i++) {\n    sleep(1);\n    *p = *p + 1;\n    printf(\"(%d) p: %d\\n\", getpid(), *p); // a4\n  }\n  free(p);\n  return 0;\n}\n</code></pre> <p>\u5982\u679c\u8981\u5f97\u5230\u548c\u4e66\u4e2d\u4e00\u6837\u7684\u6548\u679c\uff0c\u8fd8\u9700\u8981\u5173\u95ed ASLR \u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\uff0c\u4e0d\u7136\u5c31\u7b97\u662f\u865a\u62df\u5185\u5b58\uff0c\u6bcf\u6b21\u5206\u914d\u7684\u5730\u5740\u4e5f\u662f\u4e0d\u56fa\u5b9a\u7684\u3002</p> <pre><code>$ echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre> <p>\u5982\u679c\u7f16\u8bd1\u65f6\u5173\u6389 PIE \uff0c\u5f97\u5230\u7684\u5730\u5740\u4f1a\u66f4\u201c\u597d\u770b\u201d\u4e9b\uff0c\u66f4\u63a5\u8fd1\u4e66\u4e2d\u5185\u5bb9\u3002</p> <pre><code>$ gcc mem.c -o mem -no-pie\n</code></pre> <pre><code>$ ./mem &amp;; ./mem &amp; # (1)!\n(63585) memory address of p: 0x4052a0\n(63586) memory address of p: 0x4052a0\n(63585) p: 1\n(63586) p: 1\n(63585) p: 2\n(63586) p: 2\n(63586) p: 3\n(63585) p: 3\n(63586) p: 4\n(63585) p: 4\n(63586) p: 5\n(63585) p: 5\n</code></pre> <ol> <li><code>&amp;</code> \u7b26\u53f7\u7528\u4e8e\u5728 Unix-like \u7cfb\u7edf\u4e2d\u540e\u53f0\u8fd0\u884c\u8fdb\u7a0b\uff0c\u5b83\u4f1a\u542f\u52a8\u547d\u4ee4\u7136\u540e\u7acb\u5373\u8fd4\u56de\u5230\u547d\u4ee4\u884c\u63d0\u793a\u7b26\uff0c\u800c\u4e0d\u662f\u6302\u8d77\u76f4\u5230\u547d\u4ee4\u5b8c\u6210\u3002\u4e0d\u540c\u7684 shell \u53ef\u80fd\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c\u4f46\u884c\u4e3a\u57fa\u672c\u4e00\u81f4\u3002\u6700\u7ec8\u7684\u6548\u679c\u5c31\u662f\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a <code>mem</code> \u7a0b\u5e8f\u3002</li> </ol> <p>\u5b9e\u9a8c\u5b8c\u5c3d\u5feb\u628a ASLR \u6539\u56de\u53bb\uff0c\u4ee5\u514d\u5bf9\u7cfb\u7edf\u5b89\u5168\u9020\u6210\u5f71\u54cd\uff0c\u73b0\u4ee3 Linux \u7cfb\u7edf\u4e2d <code>/proc/sys/kernel/randomize_va_space</code> \u5185\u5bb9\u4e00\u822c\u90fd\u662f <code>2</code> \uff0c\u610f\u4e3a\u66f4\u5f3a\u7684\u968f\u673a\u5316\u3002</p> <pre><code>$ echo 2 | sudo tee /proc/sys/kernel/randomize_va_space\n</code></pre> <p>\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u5c06\u8d44\u6e90\u865a\u62df\u5316</p> <p>\u6211\u4eec\u5c06\u5728\u672c\u4e66\u4e2d\u56de\u7b54\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u5c06\u8d44\u6e90\u865a\u62df\u5316\uff1f\u8fd9\u662f\u5173\u952e\u95ee\u9898\u3002 \u4e3a\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u8fd9\u6837\u505a\uff1f\u8fd9\u4e0d\u662f\u4e3b\u8981\u95ee\u9898\uff0c\u56e0\u4e3a\u7b54\u6848\u5e94\u8be5\u5f88\u660e\u663e\uff1a\u5b83\u8ba9\u7cfb\u7edf\u66f4\u6613\u4e8e\u4f7f\u7528\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5173\u6ce8\u5982\u4f55\u865a\u62df\u5316\uff1a</p> <ol> <li>\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u54ea\u4e9b\u673a\u5236\u548c\u7b56\u7565\u6765\u5b9e\u73b0\u865a\u62df\u5316\uff1f</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u6709\u6548\u5730\u5b9e\u73b0\u865a\u62df\u5316\uff1f</li> <li>\u9700\u8981\u54ea\u4e9b\u786c\u4ef6\u652f\u6301\uff1f</li> </ol>"},{"location":"cs/os/ostep/02introduction.html#23","title":"2.3 \u5e76\u53d1","text":"threads.c<pre><code>#include &lt;pthread.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvolatile int counter = 0;\nint loops;\n\nvoid *worker(void *arg) {\n  int i;\n  for (i = 0; i &lt; loops; i++) {\n    counter++;\n  }\n  return NULL;\n}\n\nint main(int argc, char *argv[]) {\n  if (argc != 2) {\n    fprintf(stderr, \"usage: threads &lt;value&gt;\\n\");\n    exit(1);\n  }\n  loops = atoi(argv[1]);\n  pthread_t p1, p2;\n  printf(\"Initial value : %d\\n\", counter);\n\n  pthread_create(&amp;p1, NULL, worker, NULL);\n  pthread_create(&amp;p2, NULL, worker, NULL);\n  pthread_join(p1, NULL);\n  pthread_join(p2, NULL);\n  printf(\"Final value : %d\\n\", counter);\n  return 0;\n}\n</code></pre> <pre><code>$ ./threads 100000\nInitial value : 0\nFinal value : 140997\n$ ./threads 100000\nInitial value : 0\nFinal value : 119700\n$ ./threads 100000\nInitial value : 0\nFinal value : 129215\n</code></pre> <p>\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u6784\u5efa\u6b63\u786e\u7684\u5e76\u53d1\u7a0b\u5e8f</p> <p>\u5982\u679c\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u4e2d\u6709\u5f88\u591a\u5e76\u53d1\u6267\u884c\u7684\u7ebf\u7a0b\uff0c\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u6b63\u786e\u5de5\u4f5c\u7684\u7a0b\u5e8f\uff1f  </p> <ol> <li>\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u4ec0\u4e48\u539f\u8bed\uff1f</li> <li>\u786c\u4ef6\u5e94\u8be5\u63d0\u4f9b\u54ea\u4e9b\u673a\u5236\uff1f</li> <li>\u6211\u4eec\u5982\u4f55\u5229\u7528\u5b83\u4eec\u6765\u89e3\u51b3\u5e76\u53d1\u95ee\u9898\uff1f</li> </ol>"},{"location":"cs/os/ostep/02introduction.html#24","title":"2.4 \u6301\u4e45\u6027","text":"<p>\u5176\u5b9e\u5c31\u662f\u6587\u4ef6\u7cfb\u7edf\u3002</p> io.c<pre><code>#include &lt;assert.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char *argv[]) {\n  int fd = open(\"/tmp/file\", O_WRONLY | O_CREAT | O_TRUNC, S_IRWXU);\n  assert(fd &gt; -1);\n  int rc = write(fd, \"hello world\\n\", 13);\n  assert(rc == 13);\n  close(fd);\n  return 0;\n}\n</code></pre> <p>\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u6301\u4e45\u5730\u5b58\u50a8\u6570\u636e</p> <p>\u6587\u4ef6\u7cfb\u7edf\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u8d1f\u8d23\u7ba1\u7406\u6301\u4e45\u7684\u6570\u636e\u3002  </p> <ol> <li>\u6301\u4e45\u6027\u9700\u8981\u54ea\u4e9b\u6280\u672f\u624d\u80fd\u6b63\u786e\u5730\u5b9e\u73b0\uff1f</li> <li>\u9700\u8981\u54ea\u4e9b\u673a\u5236\u548c\u7b56\u7565\u624d\u80fd\u9ad8\u6027\u80fd\u5730\u5b9e\u73b0\uff1f</li> <li>\u9762\u5bf9\u786c\u4ef6\u548c\u8f6f\u4ef6\u6545\u969c\uff0c\u53ef\u9760\u6027\u5982\u4f55\u5b9e\u73b0\uff1f</li> </ol>"},{"location":"cs/os/ostep/02introduction.html#26","title":"2.6 \u7b80\u5355\u5386\u53f2","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u5386\u53f2\uff1a</p> <ul> <li>\u51fd\u6570\u5e93</li> <li>\u6279\u5904\u7406\u7cfb\u7edf</li> <li>\u7279\u6743\u7ea7\u548c\u7cfb\u7edf\u8c03\u7528</li> <li>\u591a\u9053\u7a0b\u5e8f</li> <li>\u5206\u65f6\u591a\u4efb\u52a1</li> <li>\u5185\u5b58\u4fdd\u62a4</li> <li>\u5e76\u53d1</li> <li>...</li> </ul>"},{"location":"cs/pl/index.html","title":"Programming Language &amp; ISA","text":""},{"location":"cs/pl/c/index.html","title":"C","text":""},{"location":"cs/pl/python/index.html","title":"Python","text":""},{"location":"cs/pl/racket/index.html","title":"Racket","text":""},{"location":"cs/pl/riscv/index.html","title":"RISC-V ISA","text":""},{"location":"cs/pl/rust/index.html","title":"Rust","text":""},{"location":"ctf/index.html","title":"Capture The Flag","text":""},{"location":"gamedev/index.html","title":"Game Development &amp; Game Design","text":""},{"location":"sec/index.html","title":"Security","text":""},{"location":"writeups/index.html","title":"Writeups","text":""}]}